
LED_ON.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000003dc  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000584  0800058c  0001058c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000584  08000584  0001058c  2**0
                  CONTENTS
  4 .ARM          00000000  08000584  08000584  0001058c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000584  0800058c  0001058c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000584  08000584  00010584  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000588  08000588  00010588  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001058c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0001058c  2**0
                  CONTENTS
 10 .bss          00000020  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0001058c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000c0a  00000000  00000000  000105bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000208  00000000  00000000  000111c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000113d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000030  00000000  00000000  00011418  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001cba  00000000  00000000  00011448  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000006f7  00000000  00000000  00013102  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00007fd1  00000000  00000000  000137f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0001b7ca  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000058  00000000  00000000  0001b820  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800056c 	.word	0x0800056c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800056c 	.word	0x0800056c

080001e8 <main>:

uint32_t * s;


int main(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b091      	sub	sp, #68	; 0x44
 80001ec:	af00      	add	r7, sp, #0

	uint32_t * RCC= (uint32_t*) 0x40023800;
 80001ee:	4ba3      	ldr	r3, [pc, #652]	; (800047c <main+0x294>)
 80001f0:	62fb      	str	r3, [r7, #44]	; 0x2c
	uint32_t * RCC_AHB1 =RCC +12;
 80001f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80001f4:	3330      	adds	r3, #48	; 0x30
 80001f6:	62bb      	str	r3, [r7, #40]	; 0x28
	uint32_t * GPIOD= 0x40020C00;
 80001f8:	4ba1      	ldr	r3, [pc, #644]	; (8000480 <main+0x298>)
 80001fa:	627b      	str	r3, [r7, #36]	; 0x24
	uint32_t * GPIOD_MODER= GPIOD + 0;
 80001fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80001fe:	623b      	str	r3, [r7, #32]
	uint32_t * GPIOD_ODR= GPIOD + 5;
 8000200:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000202:	3314      	adds	r3, #20
 8000204:	61fb      	str	r3, [r7, #28]
	uint32_t * GPIOA= 0x40020000 ;
 8000206:	4b9f      	ldr	r3, [pc, #636]	; (8000484 <main+0x29c>)
 8000208:	61bb      	str	r3, [r7, #24]
	uint32_t * GPIOA_MODER= GPIOA + 0;
 800020a:	69bb      	ldr	r3, [r7, #24]
 800020c:	617b      	str	r3, [r7, #20]
	uint32_t * GPIOA_IDR= GPIOA + 4;
 800020e:	69bb      	ldr	r3, [r7, #24]
 8000210:	3310      	adds	r3, #16
 8000212:	613b      	str	r3, [r7, #16]
	uint32_t * GPIOA_PUPDR= GPIOA + 3;
 8000214:	69bb      	ldr	r3, [r7, #24]
 8000216:	330c      	adds	r3, #12
 8000218:	60fb      	str	r3, [r7, #12]



	//Reading from RCC_AHB1 register
	*RCC_AHB1 |=1<<3; //Set GPIOD clock
 800021a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	f043 0208 	orr.w	r2, r3, #8
 8000222:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000224:	601a      	str	r2, [r3, #0]
	*RCC_AHB1 |=1<<2; //Set GPIOC clock
 8000226:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	f043 0204 	orr.w	r2, r3, #4
 800022e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000230:	601a      	str	r2, [r3, #0]
	*RCC_AHB1 |=1<<0; //Set GPIOA clock
 8000232:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000234:	681b      	ldr	r3, [r3, #0]
 8000236:	f043 0201 	orr.w	r2, r3, #1
 800023a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800023c:	601a      	str	r2, [r3, #0]

	struct RCC_t* AHB1a =&s;
 800023e:	4b92      	ldr	r3, [pc, #584]	; (8000488 <main+0x2a0>)
 8000240:	60bb      	str	r3, [r7, #8]
	AHB1a->GPIOAEN= (*RCC_AHB1 & 1<<0)>>0;
 8000242:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	f003 0301 	and.w	r3, r3, #1
 800024a:	b2d9      	uxtb	r1, r3
 800024c:	68ba      	ldr	r2, [r7, #8]
 800024e:	7813      	ldrb	r3, [r2, #0]
 8000250:	f361 0300 	bfi	r3, r1, #0, #1
 8000254:	7013      	strb	r3, [r2, #0]
	AHB1a->GPIOBEN= (*RCC_AHB1 & 1<<1)>>1;
 8000256:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	085b      	lsrs	r3, r3, #1
 800025c:	f003 0301 	and.w	r3, r3, #1
 8000260:	b2d9      	uxtb	r1, r3
 8000262:	68ba      	ldr	r2, [r7, #8]
 8000264:	7813      	ldrb	r3, [r2, #0]
 8000266:	f361 0341 	bfi	r3, r1, #1, #1
 800026a:	7013      	strb	r3, [r2, #0]
	AHB1a->GPIOCEN= (*RCC_AHB1 & 1<<2)>>2;
 800026c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800026e:	681b      	ldr	r3, [r3, #0]
 8000270:	089b      	lsrs	r3, r3, #2
 8000272:	f003 0301 	and.w	r3, r3, #1
 8000276:	b2d9      	uxtb	r1, r3
 8000278:	68ba      	ldr	r2, [r7, #8]
 800027a:	7813      	ldrb	r3, [r2, #0]
 800027c:	f361 0382 	bfi	r3, r1, #2, #1
 8000280:	7013      	strb	r3, [r2, #0]
	AHB1a->GPIODEN= (*RCC_AHB1 & 1<<3)>>3;
 8000282:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	08db      	lsrs	r3, r3, #3
 8000288:	f003 0301 	and.w	r3, r3, #1
 800028c:	b2d9      	uxtb	r1, r3
 800028e:	68ba      	ldr	r2, [r7, #8]
 8000290:	7813      	ldrb	r3, [r2, #0]
 8000292:	f361 03c3 	bfi	r3, r1, #3, #1
 8000296:	7013      	strb	r3, [r2, #0]
	AHB1a->GPIOEEN= (*RCC_AHB1 & 1<<4)>>4;
 8000298:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	091b      	lsrs	r3, r3, #4
 800029e:	f003 0301 	and.w	r3, r3, #1
 80002a2:	b2d9      	uxtb	r1, r3
 80002a4:	68ba      	ldr	r2, [r7, #8]
 80002a6:	7813      	ldrb	r3, [r2, #0]
 80002a8:	f361 1304 	bfi	r3, r1, #4, #1
 80002ac:	7013      	strb	r3, [r2, #0]
	AHB1a->GPIOFEN= (*RCC_AHB1 & 1<<5)>>5;
 80002ae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	095b      	lsrs	r3, r3, #5
 80002b4:	f003 0301 	and.w	r3, r3, #1
 80002b8:	b2d9      	uxtb	r1, r3
 80002ba:	68ba      	ldr	r2, [r7, #8]
 80002bc:	7813      	ldrb	r3, [r2, #0]
 80002be:	f361 1345 	bfi	r3, r1, #5, #1
 80002c2:	7013      	strb	r3, [r2, #0]
	AHB1a->GPIOGEN= (*RCC_AHB1 & 1<<6)>>6;
 80002c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	099b      	lsrs	r3, r3, #6
 80002ca:	f003 0301 	and.w	r3, r3, #1
 80002ce:	b2d9      	uxtb	r1, r3
 80002d0:	68ba      	ldr	r2, [r7, #8]
 80002d2:	7813      	ldrb	r3, [r2, #0]
 80002d4:	f361 1386 	bfi	r3, r1, #6, #1
 80002d8:	7013      	strb	r3, [r2, #0]
	AHB1a->GPIOHEN= (*RCC_AHB1 & 1<<7)>>7;
 80002da:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	09db      	lsrs	r3, r3, #7
 80002e0:	f003 0301 	and.w	r3, r3, #1
 80002e4:	b2d9      	uxtb	r1, r3
 80002e6:	68ba      	ldr	r2, [r7, #8]
 80002e8:	7813      	ldrb	r3, [r2, #0]
 80002ea:	f361 13c7 	bfi	r3, r1, #7, #1
 80002ee:	7013      	strb	r3, [r2, #0]

	//Reading from RCC_AHB1 register using Unions
	union RCC2_t RCCU;
	RCCU.RCC2_structure=*RCC_AHB1;
 80002f0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	b2db      	uxtb	r3, r3
 80002f6:	703b      	strb	r3, [r7, #0]
	//RCCU.RCC2_taUnion=*RCC_AHB1;


	//Writing to RCC_AHB1 register
	s=0x4A;
 80002f8:	4b63      	ldr	r3, [pc, #396]	; (8000488 <main+0x2a0>)
 80002fa:	224a      	movs	r2, #74	; 0x4a
 80002fc:	601a      	str	r2, [r3, #0]
	*RCC_AHB1=s;
 80002fe:	4b62      	ldr	r3, [pc, #392]	; (8000488 <main+0x2a0>)
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	461a      	mov	r2, r3
 8000304:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000306:	601a      	str	r2, [r3, #0]


	//Another way to write to RCC_AHB1 register
	 AHB1a->GPIOAEN= 1;
 8000308:	68ba      	ldr	r2, [r7, #8]
 800030a:	7813      	ldrb	r3, [r2, #0]
 800030c:	f043 0301 	orr.w	r3, r3, #1
 8000310:	7013      	strb	r3, [r2, #0]
	 AHB1a->GPIOBEN= 0;
 8000312:	68ba      	ldr	r2, [r7, #8]
 8000314:	7813      	ldrb	r3, [r2, #0]
 8000316:	f36f 0341 	bfc	r3, #1, #1
 800031a:	7013      	strb	r3, [r2, #0]
	 AHB1a->GPIOCEN= 0;
 800031c:	68ba      	ldr	r2, [r7, #8]
 800031e:	7813      	ldrb	r3, [r2, #0]
 8000320:	f36f 0382 	bfc	r3, #2, #1
 8000324:	7013      	strb	r3, [r2, #0]
	 AHB1a->GPIODEN= 1;
 8000326:	68ba      	ldr	r2, [r7, #8]
 8000328:	7813      	ldrb	r3, [r2, #0]
 800032a:	f043 0308 	orr.w	r3, r3, #8
 800032e:	7013      	strb	r3, [r2, #0]
	 AHB1a->GPIOEEN= 0;
 8000330:	68ba      	ldr	r2, [r7, #8]
 8000332:	7813      	ldrb	r3, [r2, #0]
 8000334:	f36f 1304 	bfc	r3, #4, #1
 8000338:	7013      	strb	r3, [r2, #0]
	 AHB1a->GPIOFEN= 1;
 800033a:	68ba      	ldr	r2, [r7, #8]
 800033c:	7813      	ldrb	r3, [r2, #0]
 800033e:	f043 0320 	orr.w	r3, r3, #32
 8000342:	7013      	strb	r3, [r2, #0]
	 AHB1a->GPIOGEN= 1;
 8000344:	68ba      	ldr	r2, [r7, #8]
 8000346:	7813      	ldrb	r3, [r2, #0]
 8000348:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800034c:	7013      	strb	r3, [r2, #0]
	 AHB1a->GPIOHEN= 0;
 800034e:	68ba      	ldr	r2, [r7, #8]
 8000350:	7813      	ldrb	r3, [r2, #0]
 8000352:	f36f 13c7 	bfc	r3, #7, #1
 8000356:	7013      	strb	r3, [r2, #0]
	 *RCC_AHB1=s;
 8000358:	4b4b      	ldr	r3, [pc, #300]	; (8000488 <main+0x2a0>)
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	461a      	mov	r2, r3
 800035e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000360:	601a      	str	r2, [r3, #0]

	 //Another way to write to RCC_AHB1 register using unions
	 RCCU.RCC2_structure=0x93;
 8000362:	2393      	movs	r3, #147	; 0x93
 8000364:	703b      	strb	r3, [r7, #0]
	 *RCC_AHB1=RCCU.RCC2_structure;
 8000366:	783b      	ldrb	r3, [r7, #0]
 8000368:	461a      	mov	r2, r3
 800036a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800036c:	601a      	str	r2, [r3, #0]

	 //Another way to write to RCC_AHB1 register using unions
	 RCCU.RCC2_taUnion.GPIOAEN=1;
 800036e:	783b      	ldrb	r3, [r7, #0]
 8000370:	f043 0301 	orr.w	r3, r3, #1
 8000374:	703b      	strb	r3, [r7, #0]
	 RCCU.RCC2_taUnion.GPIOBEN=0;
 8000376:	783b      	ldrb	r3, [r7, #0]
 8000378:	f36f 0341 	bfc	r3, #1, #1
 800037c:	703b      	strb	r3, [r7, #0]
	 RCCU.RCC2_taUnion.GPIOCEN=1;
 800037e:	783b      	ldrb	r3, [r7, #0]
 8000380:	f043 0304 	orr.w	r3, r3, #4
 8000384:	703b      	strb	r3, [r7, #0]
	 RCCU.RCC2_taUnion.GPIODEN=1;
 8000386:	783b      	ldrb	r3, [r7, #0]
 8000388:	f043 0308 	orr.w	r3, r3, #8
 800038c:	703b      	strb	r3, [r7, #0]
	 RCCU.RCC2_taUnion.GPIOEEN=0;
 800038e:	783b      	ldrb	r3, [r7, #0]
 8000390:	f36f 1304 	bfc	r3, #4, #1
 8000394:	703b      	strb	r3, [r7, #0]
	 RCCU.RCC2_taUnion.GPIOFEN=1;
 8000396:	783b      	ldrb	r3, [r7, #0]
 8000398:	f043 0320 	orr.w	r3, r3, #32
 800039c:	703b      	strb	r3, [r7, #0]
	 RCCU.RCC2_taUnion.GPIOGEN=1;
 800039e:	783b      	ldrb	r3, [r7, #0]
 80003a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003a4:	703b      	strb	r3, [r7, #0]
	 RCCU.RCC2_taUnion.GPIOHEN=0;
 80003a6:	783b      	ldrb	r3, [r7, #0]
 80003a8:	f36f 13c7 	bfc	r3, #7, #1
 80003ac:	703b      	strb	r3, [r7, #0]
	 *RCC_AHB1=RCCU.RCC2_structure;
 80003ae:	783b      	ldrb	r3, [r7, #0]
 80003b0:	461a      	mov	r2, r3
 80003b2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80003b4:	601a      	str	r2, [r3, #0]




	 * GPIOD_MODER &=~(5<<24);
 80003b6:	6a3b      	ldr	r3, [r7, #32]
 80003b8:	681b      	ldr	r3, [r3, #0]
 80003ba:	f023 62a0 	bic.w	r2, r3, #83886080	; 0x5000000
 80003be:	6a3b      	ldr	r3, [r7, #32]
 80003c0:	601a      	str	r2, [r3, #0]
	* GPIOD_MODER |=0x05<<24 ;// Set  PD13 and PD12 to output
 80003c2:	6a3b      	ldr	r3, [r7, #32]
 80003c4:	681b      	ldr	r3, [r3, #0]
 80003c6:	f043 62a0 	orr.w	r2, r3, #83886080	; 0x5000000
 80003ca:	6a3b      	ldr	r3, [r7, #32]
 80003cc:	601a      	str	r2, [r3, #0]
	* GPIOA_MODER &=~(1<<0) ;// Set  PA0 to input
 80003ce:	697b      	ldr	r3, [r7, #20]
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	f023 0201 	bic.w	r2, r3, #1
 80003d6:	697b      	ldr	r3, [r7, #20]
 80003d8:	601a      	str	r2, [r3, #0]
	* GPIOA_PUPDR &=~(3<<0);
 80003da:	68fb      	ldr	r3, [r7, #12]
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	f023 0203 	bic.w	r2, r3, #3
 80003e2:	68fb      	ldr	r3, [r7, #12]
 80003e4:	601a      	str	r2, [r3, #0]
	* GPIOA_PUPDR |=(2<<0);
 80003e6:	68fb      	ldr	r3, [r7, #12]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	f043 0202 	orr.w	r2, r3, #2
 80003ee:	68fb      	ldr	r3, [r7, #12]
 80003f0:	601a      	str	r2, [r3, #0]


	while(1)
	{
		uint32_t j= * GPIOA_IDR & 1<<0;
 80003f2:	693b      	ldr	r3, [r7, #16]
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	f003 0301 	and.w	r3, r3, #1
 80003fa:	607b      	str	r3, [r7, #4]
		if (j==0)
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	2b00      	cmp	r3, #0
 8000400:	d12c      	bne.n	800045c <main+0x274>
		{
			* GPIOD_ODR	|= 1<<13  ; //Set PD13 to high
 8000402:	69fb      	ldr	r3, [r7, #28]
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 800040a:	69fb      	ldr	r3, [r7, #28]
 800040c:	601a      	str	r2, [r3, #0]
			* GPIOD_ODR &= ~(1<<12) ;//Set PD12 to low
 800040e:	69fb      	ldr	r3, [r7, #28]
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8000416:	69fb      	ldr	r3, [r7, #28]
 8000418:	601a      	str	r2, [r3, #0]
			for (uint32_t i=0; i<1000000; i++);
 800041a:	2300      	movs	r3, #0
 800041c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800041e:	e002      	b.n	8000426 <main+0x23e>
 8000420:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000422:	3301      	adds	r3, #1
 8000424:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000426:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000428:	4a18      	ldr	r2, [pc, #96]	; (800048c <main+0x2a4>)
 800042a:	4293      	cmp	r3, r2
 800042c:	d9f8      	bls.n	8000420 <main+0x238>
			* GPIOD_ODR &= ~(1<<13) ;//Set PD13 to low
 800042e:	69fb      	ldr	r3, [r7, #28]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8000436:	69fb      	ldr	r3, [r7, #28]
 8000438:	601a      	str	r2, [r3, #0]
			* GPIOD_ODR	|= 1<<12  ; //Set PD12 to high
 800043a:	69fb      	ldr	r3, [r7, #28]
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8000442:	69fb      	ldr	r3, [r7, #28]
 8000444:	601a      	str	r2, [r3, #0]
			for (uint32_t i=0; i<1000000; i++);
 8000446:	2300      	movs	r3, #0
 8000448:	63bb      	str	r3, [r7, #56]	; 0x38
 800044a:	e002      	b.n	8000452 <main+0x26a>
 800044c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800044e:	3301      	adds	r3, #1
 8000450:	63bb      	str	r3, [r7, #56]	; 0x38
 8000452:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000454:	4a0d      	ldr	r2, [pc, #52]	; (800048c <main+0x2a4>)
 8000456:	4293      	cmp	r3, r2
 8000458:	d9f8      	bls.n	800044c <main+0x264>
 800045a:	e7ca      	b.n	80003f2 <main+0x20a>
		}
		else
		{
			* GPIOD_ODR	|= 1<<13  ; //Set PD13 to high
 800045c:	69fb      	ldr	r3, [r7, #28]
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 8000464:	69fb      	ldr	r3, [r7, #28]
 8000466:	601a      	str	r2, [r3, #0]
			* GPIOD_ODR &= ~(1<<12) ;//Set PD12 to low
 8000468:	69fb      	ldr	r3, [r7, #28]
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8000470:	69fb      	ldr	r3, [r7, #28]
 8000472:	601a      	str	r2, [r3, #0]
			for (uint32_t i=0; i<100000; i++);
 8000474:	2300      	movs	r3, #0
 8000476:	637b      	str	r3, [r7, #52]	; 0x34
 8000478:	e00d      	b.n	8000496 <main+0x2ae>
 800047a:	bf00      	nop
 800047c:	40023800 	.word	0x40023800
 8000480:	40020c00 	.word	0x40020c00
 8000484:	40020000 	.word	0x40020000
 8000488:	2000001c 	.word	0x2000001c
 800048c:	000f423f 	.word	0x000f423f
 8000490:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000492:	3301      	adds	r3, #1
 8000494:	637b      	str	r3, [r7, #52]	; 0x34
 8000496:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000498:	4a0c      	ldr	r2, [pc, #48]	; (80004cc <main+0x2e4>)
 800049a:	4293      	cmp	r3, r2
 800049c:	d9f8      	bls.n	8000490 <main+0x2a8>
			* GPIOD_ODR &= ~(1<<13) ;//Set PD13 to low
 800049e:	69fb      	ldr	r3, [r7, #28]
 80004a0:	681b      	ldr	r3, [r3, #0]
 80004a2:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 80004a6:	69fb      	ldr	r3, [r7, #28]
 80004a8:	601a      	str	r2, [r3, #0]
			* GPIOD_ODR	|= 1<<12  ; //Set PD12 to high
 80004aa:	69fb      	ldr	r3, [r7, #28]
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 80004b2:	69fb      	ldr	r3, [r7, #28]
 80004b4:	601a      	str	r2, [r3, #0]
			for (uint32_t i=0; i<100000; i++);
 80004b6:	2300      	movs	r3, #0
 80004b8:	633b      	str	r3, [r7, #48]	; 0x30
 80004ba:	e002      	b.n	80004c2 <main+0x2da>
 80004bc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80004be:	3301      	adds	r3, #1
 80004c0:	633b      	str	r3, [r7, #48]	; 0x30
 80004c2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80004c4:	4a01      	ldr	r2, [pc, #4]	; (80004cc <main+0x2e4>)
 80004c6:	4293      	cmp	r3, r2
 80004c8:	d9f8      	bls.n	80004bc <main+0x2d4>
	{
 80004ca:	e792      	b.n	80003f2 <main+0x20a>
 80004cc:	0001869f 	.word	0x0001869f

080004d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004d0:	480d      	ldr	r0, [pc, #52]	; (8000508 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004d2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004d4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004d8:	480c      	ldr	r0, [pc, #48]	; (800050c <LoopForever+0x6>)
  ldr r1, =_edata
 80004da:	490d      	ldr	r1, [pc, #52]	; (8000510 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004dc:	4a0d      	ldr	r2, [pc, #52]	; (8000514 <LoopForever+0xe>)
  movs r3, #0
 80004de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004e0:	e002      	b.n	80004e8 <LoopCopyDataInit>

080004e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004e6:	3304      	adds	r3, #4

080004e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004ec:	d3f9      	bcc.n	80004e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004ee:	4a0a      	ldr	r2, [pc, #40]	; (8000518 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004f0:	4c0a      	ldr	r4, [pc, #40]	; (800051c <LoopForever+0x16>)
  movs r3, #0
 80004f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004f4:	e001      	b.n	80004fa <LoopFillZerobss>

080004f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004f8:	3204      	adds	r2, #4

080004fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004fc:	d3fb      	bcc.n	80004f6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004fe:	f000 f811 	bl	8000524 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000502:	f7ff fe71 	bl	80001e8 <main>

08000506 <LoopForever>:

LoopForever:
    b LoopForever
 8000506:	e7fe      	b.n	8000506 <LoopForever>
  ldr   r0, =_estack
 8000508:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800050c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000510:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000514:	0800058c 	.word	0x0800058c
  ldr r2, =_sbss
 8000518:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800051c:	20000020 	.word	0x20000020

08000520 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000520:	e7fe      	b.n	8000520 <ADC_IRQHandler>
	...

08000524 <__libc_init_array>:
 8000524:	b570      	push	{r4, r5, r6, lr}
 8000526:	4d0d      	ldr	r5, [pc, #52]	; (800055c <__libc_init_array+0x38>)
 8000528:	4c0d      	ldr	r4, [pc, #52]	; (8000560 <__libc_init_array+0x3c>)
 800052a:	1b64      	subs	r4, r4, r5
 800052c:	10a4      	asrs	r4, r4, #2
 800052e:	2600      	movs	r6, #0
 8000530:	42a6      	cmp	r6, r4
 8000532:	d109      	bne.n	8000548 <__libc_init_array+0x24>
 8000534:	4d0b      	ldr	r5, [pc, #44]	; (8000564 <__libc_init_array+0x40>)
 8000536:	4c0c      	ldr	r4, [pc, #48]	; (8000568 <__libc_init_array+0x44>)
 8000538:	f000 f818 	bl	800056c <_init>
 800053c:	1b64      	subs	r4, r4, r5
 800053e:	10a4      	asrs	r4, r4, #2
 8000540:	2600      	movs	r6, #0
 8000542:	42a6      	cmp	r6, r4
 8000544:	d105      	bne.n	8000552 <__libc_init_array+0x2e>
 8000546:	bd70      	pop	{r4, r5, r6, pc}
 8000548:	f855 3b04 	ldr.w	r3, [r5], #4
 800054c:	4798      	blx	r3
 800054e:	3601      	adds	r6, #1
 8000550:	e7ee      	b.n	8000530 <__libc_init_array+0xc>
 8000552:	f855 3b04 	ldr.w	r3, [r5], #4
 8000556:	4798      	blx	r3
 8000558:	3601      	adds	r6, #1
 800055a:	e7f2      	b.n	8000542 <__libc_init_array+0x1e>
 800055c:	08000584 	.word	0x08000584
 8000560:	08000584 	.word	0x08000584
 8000564:	08000584 	.word	0x08000584
 8000568:	08000588 	.word	0x08000588

0800056c <_init>:
 800056c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800056e:	bf00      	nop
 8000570:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000572:	bc08      	pop	{r3}
 8000574:	469e      	mov	lr, r3
 8000576:	4770      	bx	lr

08000578 <_fini>:
 8000578:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800057a:	bf00      	nop
 800057c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800057e:	bc08      	pop	{r3}
 8000580:	469e      	mov	lr, r3
 8000582:	4770      	bx	lr
