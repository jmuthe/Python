
LED_ON.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001ae0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b8  08001c90  08001c90  00011c90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001d48  08001d48  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  08001d48  08001d48  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001d48  08001d48  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001d48  08001d48  00011d48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001d4c  08001d4c  00011d4c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  08001d50  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002006c  2**0
                  CONTENTS
 10 .bss          000000e4  2000006c  2000006c  0002006c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000150  20000150  0002006c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001b15  00000000  00000000  0002009c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000003d0  00000000  00000000  00021bb1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000068  00000000  00000000  00021f88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000040  00000000  00000000  00021ff0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000022fb  00000000  00000000  00022030  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d3a  00000000  00000000  0002432b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008772  00000000  00000000  00025065  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0002d7d7  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000c20  00000000  00000000  0002d82c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000006c 	.word	0x2000006c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001c78 	.word	0x08001c78

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000070 	.word	0x20000070
 80001ec:	08001c78 	.word	0x08001c78

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <strlen>:
 8000290:	4603      	mov	r3, r0
 8000292:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000296:	2a00      	cmp	r2, #0
 8000298:	d1fb      	bne.n	8000292 <strlen+0x2>
 800029a:	1a18      	subs	r0, r3, r0
 800029c:	3801      	subs	r0, #1
 800029e:	4770      	bx	lr

080002a0 <main>:
#define	GPIOA_MODER		(GPIOA + 0)
#define	GPIOA_IDR		(GPIOA + 0x10)
#define	GPIOA_PUPDR     (GPIOA+ 0x0C)

int main(void)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b098      	sub	sp, #96	; 0x60
 80002a4:	af00      	add	r7, sp, #0

	initialise_monitor_handles();
 80002a6:	f001 fc6d 	bl	8001b84 <initialise_monitor_handles>
	rcc_ahb1_t* 	p_rcc_ahb1=(rcc_ahb1_t*) RCC_AHB1;
 80002aa:	4b9d      	ldr	r3, [pc, #628]	; (8000520 <main+0x280>)
 80002ac:	61fb      	str	r3, [r7, #28]
	gpiox_moder_t * p_gpioa_moder = (gpiox_moder_t * )GPIOA_MODER;
 80002ae:	4b9d      	ldr	r3, [pc, #628]	; (8000524 <main+0x284>)
 80002b0:	61bb      	str	r3, [r7, #24]
	gpiox_moder_t * p_gpiod_moder = (gpiox_moder_t * )GPIOD_MODER;
 80002b2:	4b9d      	ldr	r3, [pc, #628]	; (8000528 <main+0x288>)
 80002b4:	617b      	str	r3, [r7, #20]
	gpiox_odr_t* 	p_gpiod_odr  = (gpiox_odr_t*) GPIOD_ODR;
 80002b6:	4b9d      	ldr	r3, [pc, #628]	; (800052c <main+0x28c>)
 80002b8:	613b      	str	r3, [r7, #16]
	gpiox_idr_t* 	p_gpioa_idr  = (gpiox_idr_t*) GPIOA_IDR;
 80002ba:	4b9d      	ldr	r3, [pc, #628]	; (8000530 <main+0x290>)
 80002bc:	60fb      	str	r3, [r7, #12]
	gpiox_pupdr_t* 	p_gpiod_pupdr=(gpiox_pupdr_t*) GPIOD_PUPDR;
 80002be:	4b9d      	ldr	r3, [pc, #628]	; (8000534 <main+0x294>)
 80002c0:	60bb      	str	r3, [r7, #8]
	gpiox_idr_t*	p_gpiod_idr	=  (gpiox_idr_t*) GPIOD_IDR;
 80002c2:	4b9d      	ldr	r3, [pc, #628]	; (8000538 <main+0x298>)
 80002c4:	607b      	str	r3, [r7, #4]
	char key;

/*This sets the clocks on the registers A and D*/
	//p_rcc_ahb1->GPIOAEN=1;
	p_rcc_ahb1->GPIODEN=1;
 80002c6:	69fa      	ldr	r2, [r7, #28]
 80002c8:	7813      	ldrb	r3, [r2, #0]
 80002ca:	f043 0308 	orr.w	r3, r3, #8
 80002ce:	7013      	strb	r3, [r2, #0]



	p_gpiod_moder->MODER0=1;//Set PD0 to output
 80002d0:	697a      	ldr	r2, [r7, #20]
 80002d2:	7813      	ldrb	r3, [r2, #0]
 80002d4:	2101      	movs	r1, #1
 80002d6:	f361 0301 	bfi	r3, r1, #0, #2
 80002da:	7013      	strb	r3, [r2, #0]
	p_gpiod_moder->MODER1=1;//Set PD1 to output
 80002dc:	697a      	ldr	r2, [r7, #20]
 80002de:	7813      	ldrb	r3, [r2, #0]
 80002e0:	2101      	movs	r1, #1
 80002e2:	f361 0383 	bfi	r3, r1, #2, #2
 80002e6:	7013      	strb	r3, [r2, #0]
	p_gpiod_moder->MODER2=1;//Set PD2 to output
 80002e8:	697a      	ldr	r2, [r7, #20]
 80002ea:	7813      	ldrb	r3, [r2, #0]
 80002ec:	2101      	movs	r1, #1
 80002ee:	f361 1305 	bfi	r3, r1, #4, #2
 80002f2:	7013      	strb	r3, [r2, #0]
	p_gpiod_moder->MODER3=1;//Set PD3 to output
 80002f4:	697a      	ldr	r2, [r7, #20]
 80002f6:	7813      	ldrb	r3, [r2, #0]
 80002f8:	2101      	movs	r1, #1
 80002fa:	f361 1387 	bfi	r3, r1, #6, #2
 80002fe:	7013      	strb	r3, [r2, #0]

	p_gpiod_moder->MODER8=0;//Set PD8 to input
 8000300:	697a      	ldr	r2, [r7, #20]
 8000302:	7893      	ldrb	r3, [r2, #2]
 8000304:	f36f 0301 	bfc	r3, #0, #2
 8000308:	7093      	strb	r3, [r2, #2]
	p_gpiod_moder->MODER9=0;//Set PD9 to input
 800030a:	697a      	ldr	r2, [r7, #20]
 800030c:	7893      	ldrb	r3, [r2, #2]
 800030e:	f36f 0383 	bfc	r3, #2, #2
 8000312:	7093      	strb	r3, [r2, #2]
	p_gpiod_moder->MODER10=0;//Set PD10 to input
 8000314:	697a      	ldr	r2, [r7, #20]
 8000316:	7893      	ldrb	r3, [r2, #2]
 8000318:	f36f 1305 	bfc	r3, #4, #2
 800031c:	7093      	strb	r3, [r2, #2]
	p_gpiod_moder->MODER11=0;//Set PD11 to input
 800031e:	697a      	ldr	r2, [r7, #20]
 8000320:	7893      	ldrb	r3, [r2, #2]
 8000322:	f36f 1387 	bfc	r3, #6, #2
 8000326:	7093      	strb	r3, [r2, #2]



	p_gpiod_pupdr->pupdr8=0x01; //Set PD8 to pull-up
 8000328:	68ba      	ldr	r2, [r7, #8]
 800032a:	7893      	ldrb	r3, [r2, #2]
 800032c:	2101      	movs	r1, #1
 800032e:	f361 0301 	bfi	r3, r1, #0, #2
 8000332:	7093      	strb	r3, [r2, #2]
	p_gpiod_pupdr->pupdr9=0x01; //Set PD9 to pull-up
 8000334:	68ba      	ldr	r2, [r7, #8]
 8000336:	7893      	ldrb	r3, [r2, #2]
 8000338:	2101      	movs	r1, #1
 800033a:	f361 0383 	bfi	r3, r1, #2, #2
 800033e:	7093      	strb	r3, [r2, #2]
	p_gpiod_pupdr->pupdr10=0x01; //Set PD10 to pull-up
 8000340:	68ba      	ldr	r2, [r7, #8]
 8000342:	7893      	ldrb	r3, [r2, #2]
 8000344:	2101      	movs	r1, #1
 8000346:	f361 1305 	bfi	r3, r1, #4, #2
 800034a:	7093      	strb	r3, [r2, #2]
	p_gpiod_pupdr->pupdr11=0x01; //Set PD11 to pull-up
 800034c:	68ba      	ldr	r2, [r7, #8]
 800034e:	7893      	ldrb	r3, [r2, #2]
 8000350:	2101      	movs	r1, #1
 8000352:	f361 1387 	bfi	r3, r1, #6, #2
 8000356:	7093      	strb	r3, [r2, #2]


	while(1)
	{
	//Make all row GPIOs HIGH state
	p_gpiod_odr->odr0=1;
 8000358:	693a      	ldr	r2, [r7, #16]
 800035a:	7813      	ldrb	r3, [r2, #0]
 800035c:	f043 0301 	orr.w	r3, r3, #1
 8000360:	7013      	strb	r3, [r2, #0]
	p_gpiod_odr->odr1=1;
 8000362:	693a      	ldr	r2, [r7, #16]
 8000364:	7813      	ldrb	r3, [r2, #0]
 8000366:	f043 0302 	orr.w	r3, r3, #2
 800036a:	7013      	strb	r3, [r2, #0]
	p_gpiod_odr->odr2=1;
 800036c:	693a      	ldr	r2, [r7, #16]
 800036e:	7813      	ldrb	r3, [r2, #0]
 8000370:	f043 0304 	orr.w	r3, r3, #4
 8000374:	7013      	strb	r3, [r2, #0]
	p_gpiod_odr->odr3=1;
 8000376:	693a      	ldr	r2, [r7, #16]
 8000378:	7813      	ldrb	r3, [r2, #0]
 800037a:	f043 0308 	orr.w	r3, r3, #8
 800037e:	7013      	strb	r3, [r2, #0]

	//Make R1 low
	p_gpiod_odr->odr0=0;
 8000380:	693a      	ldr	r2, [r7, #16]
 8000382:	7813      	ldrb	r3, [r2, #0]
 8000384:	f36f 0300 	bfc	r3, #0, #1
 8000388:	7013      	strb	r3, [r2, #0]
	if (p_gpiod_idr->idr8==0)
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	785b      	ldrb	r3, [r3, #1]
 800038e:	f003 0301 	and.w	r3, r3, #1
 8000392:	b2db      	uxtb	r3, r3
 8000394:	2b00      	cmp	r3, #0
 8000396:	d110      	bne.n	80003ba <main+0x11a>
	{
		for (uint32_t i=0; i<1000000; i++);
 8000398:	2300      	movs	r3, #0
 800039a:	65fb      	str	r3, [r7, #92]	; 0x5c
 800039c:	e002      	b.n	80003a4 <main+0x104>
 800039e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80003a0:	3301      	adds	r3, #1
 80003a2:	65fb      	str	r3, [r7, #92]	; 0x5c
 80003a4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80003a6:	4a65      	ldr	r2, [pc, #404]	; (800053c <main+0x29c>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d9f8      	bls.n	800039e <main+0xfe>
		key='1';
 80003ac:	2331      	movs	r3, #49	; 0x31
 80003ae:	70fb      	strb	r3, [r7, #3]
		printf("%c\n",key);
 80003b0:	78fb      	ldrb	r3, [r7, #3]
 80003b2:	4619      	mov	r1, r3
 80003b4:	4862      	ldr	r0, [pc, #392]	; (8000540 <main+0x2a0>)
 80003b6:	f000 fa5d 	bl	8000874 <iprintf>
	}
	if (p_gpiod_idr->idr9==0)
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	785b      	ldrb	r3, [r3, #1]
 80003be:	f003 0302 	and.w	r3, r3, #2
 80003c2:	b2db      	uxtb	r3, r3
 80003c4:	2b00      	cmp	r3, #0
 80003c6:	d110      	bne.n	80003ea <main+0x14a>
		{
			for (uint32_t i=0; i<1000000; i++);
 80003c8:	2300      	movs	r3, #0
 80003ca:	65bb      	str	r3, [r7, #88]	; 0x58
 80003cc:	e002      	b.n	80003d4 <main+0x134>
 80003ce:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80003d0:	3301      	adds	r3, #1
 80003d2:	65bb      	str	r3, [r7, #88]	; 0x58
 80003d4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80003d6:	4a59      	ldr	r2, [pc, #356]	; (800053c <main+0x29c>)
 80003d8:	4293      	cmp	r3, r2
 80003da:	d9f8      	bls.n	80003ce <main+0x12e>
			key='2';
 80003dc:	2332      	movs	r3, #50	; 0x32
 80003de:	70fb      	strb	r3, [r7, #3]
			printf("%c\n",key);
 80003e0:	78fb      	ldrb	r3, [r7, #3]
 80003e2:	4619      	mov	r1, r3
 80003e4:	4856      	ldr	r0, [pc, #344]	; (8000540 <main+0x2a0>)
 80003e6:	f000 fa45 	bl	8000874 <iprintf>
		}

	if (p_gpiod_idr->idr10==0)
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	785b      	ldrb	r3, [r3, #1]
 80003ee:	f003 0304 	and.w	r3, r3, #4
 80003f2:	b2db      	uxtb	r3, r3
 80003f4:	2b00      	cmp	r3, #0
 80003f6:	d110      	bne.n	800041a <main+0x17a>
			{
				for (uint32_t i=0; i<1000000; i++);
 80003f8:	2300      	movs	r3, #0
 80003fa:	657b      	str	r3, [r7, #84]	; 0x54
 80003fc:	e002      	b.n	8000404 <main+0x164>
 80003fe:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000400:	3301      	adds	r3, #1
 8000402:	657b      	str	r3, [r7, #84]	; 0x54
 8000404:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000406:	4a4d      	ldr	r2, [pc, #308]	; (800053c <main+0x29c>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d9f8      	bls.n	80003fe <main+0x15e>
				key='3';
 800040c:	2333      	movs	r3, #51	; 0x33
 800040e:	70fb      	strb	r3, [r7, #3]
				printf("%c\n",key);
 8000410:	78fb      	ldrb	r3, [r7, #3]
 8000412:	4619      	mov	r1, r3
 8000414:	484a      	ldr	r0, [pc, #296]	; (8000540 <main+0x2a0>)
 8000416:	f000 fa2d 	bl	8000874 <iprintf>
			}


	if (p_gpiod_idr->idr11==0)
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	785b      	ldrb	r3, [r3, #1]
 800041e:	f003 0308 	and.w	r3, r3, #8
 8000422:	b2db      	uxtb	r3, r3
 8000424:	2b00      	cmp	r3, #0
 8000426:	d110      	bne.n	800044a <main+0x1aa>
			{
				for (uint32_t i=0; i<1000000; i++);
 8000428:	2300      	movs	r3, #0
 800042a:	653b      	str	r3, [r7, #80]	; 0x50
 800042c:	e002      	b.n	8000434 <main+0x194>
 800042e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000430:	3301      	adds	r3, #1
 8000432:	653b      	str	r3, [r7, #80]	; 0x50
 8000434:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000436:	4a41      	ldr	r2, [pc, #260]	; (800053c <main+0x29c>)
 8000438:	4293      	cmp	r3, r2
 800043a:	d9f8      	bls.n	800042e <main+0x18e>
				key='A';
 800043c:	2341      	movs	r3, #65	; 0x41
 800043e:	70fb      	strb	r3, [r7, #3]
				printf("%c\n",key);
 8000440:	78fb      	ldrb	r3, [r7, #3]
 8000442:	4619      	mov	r1, r3
 8000444:	483e      	ldr	r0, [pc, #248]	; (8000540 <main+0x2a0>)
 8000446:	f000 fa15 	bl	8000874 <iprintf>
			}

	//Make R2 low
	p_gpiod_odr->odr0=1;
 800044a:	693a      	ldr	r2, [r7, #16]
 800044c:	7813      	ldrb	r3, [r2, #0]
 800044e:	f043 0301 	orr.w	r3, r3, #1
 8000452:	7013      	strb	r3, [r2, #0]
	p_gpiod_odr->odr1=1;
 8000454:	693a      	ldr	r2, [r7, #16]
 8000456:	7813      	ldrb	r3, [r2, #0]
 8000458:	f043 0302 	orr.w	r3, r3, #2
 800045c:	7013      	strb	r3, [r2, #0]
	p_gpiod_odr->odr2=1;
 800045e:	693a      	ldr	r2, [r7, #16]
 8000460:	7813      	ldrb	r3, [r2, #0]
 8000462:	f043 0304 	orr.w	r3, r3, #4
 8000466:	7013      	strb	r3, [r2, #0]
	p_gpiod_odr->odr3=1;
 8000468:	693a      	ldr	r2, [r7, #16]
 800046a:	7813      	ldrb	r3, [r2, #0]
 800046c:	f043 0308 	orr.w	r3, r3, #8
 8000470:	7013      	strb	r3, [r2, #0]
	p_gpiod_odr->odr1=0;
 8000472:	693a      	ldr	r2, [r7, #16]
 8000474:	7813      	ldrb	r3, [r2, #0]
 8000476:	f36f 0341 	bfc	r3, #1, #1
 800047a:	7013      	strb	r3, [r2, #0]
		if (p_gpiod_idr->idr8==0)
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	785b      	ldrb	r3, [r3, #1]
 8000480:	f003 0301 	and.w	r3, r3, #1
 8000484:	b2db      	uxtb	r3, r3
 8000486:	2b00      	cmp	r3, #0
 8000488:	d110      	bne.n	80004ac <main+0x20c>
		{
			for (uint32_t i=0; i<1000000; i++);
 800048a:	2300      	movs	r3, #0
 800048c:	64fb      	str	r3, [r7, #76]	; 0x4c
 800048e:	e002      	b.n	8000496 <main+0x1f6>
 8000490:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000492:	3301      	adds	r3, #1
 8000494:	64fb      	str	r3, [r7, #76]	; 0x4c
 8000496:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000498:	4a28      	ldr	r2, [pc, #160]	; (800053c <main+0x29c>)
 800049a:	4293      	cmp	r3, r2
 800049c:	d9f8      	bls.n	8000490 <main+0x1f0>
			key='4';
 800049e:	2334      	movs	r3, #52	; 0x34
 80004a0:	70fb      	strb	r3, [r7, #3]
			printf("%c\n",key);
 80004a2:	78fb      	ldrb	r3, [r7, #3]
 80004a4:	4619      	mov	r1, r3
 80004a6:	4826      	ldr	r0, [pc, #152]	; (8000540 <main+0x2a0>)
 80004a8:	f000 f9e4 	bl	8000874 <iprintf>
		}
		if (p_gpiod_idr->idr9==0)
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	785b      	ldrb	r3, [r3, #1]
 80004b0:	f003 0302 	and.w	r3, r3, #2
 80004b4:	b2db      	uxtb	r3, r3
 80004b6:	2b00      	cmp	r3, #0
 80004b8:	d110      	bne.n	80004dc <main+0x23c>
			{
				for (uint32_t i=0; i<1000000; i++);
 80004ba:	2300      	movs	r3, #0
 80004bc:	64bb      	str	r3, [r7, #72]	; 0x48
 80004be:	e002      	b.n	80004c6 <main+0x226>
 80004c0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80004c2:	3301      	adds	r3, #1
 80004c4:	64bb      	str	r3, [r7, #72]	; 0x48
 80004c6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80004c8:	4a1c      	ldr	r2, [pc, #112]	; (800053c <main+0x29c>)
 80004ca:	4293      	cmp	r3, r2
 80004cc:	d9f8      	bls.n	80004c0 <main+0x220>
				key='5';
 80004ce:	2335      	movs	r3, #53	; 0x35
 80004d0:	70fb      	strb	r3, [r7, #3]
				printf("%c\n",key);
 80004d2:	78fb      	ldrb	r3, [r7, #3]
 80004d4:	4619      	mov	r1, r3
 80004d6:	481a      	ldr	r0, [pc, #104]	; (8000540 <main+0x2a0>)
 80004d8:	f000 f9cc 	bl	8000874 <iprintf>
			}

		if (p_gpiod_idr->idr10==0)
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	785b      	ldrb	r3, [r3, #1]
 80004e0:	f003 0304 	and.w	r3, r3, #4
 80004e4:	b2db      	uxtb	r3, r3
 80004e6:	2b00      	cmp	r3, #0
 80004e8:	d110      	bne.n	800050c <main+0x26c>
				{
					for (uint32_t i=0; i<1000000; i++);
 80004ea:	2300      	movs	r3, #0
 80004ec:	647b      	str	r3, [r7, #68]	; 0x44
 80004ee:	e002      	b.n	80004f6 <main+0x256>
 80004f0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80004f2:	3301      	adds	r3, #1
 80004f4:	647b      	str	r3, [r7, #68]	; 0x44
 80004f6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80004f8:	4a10      	ldr	r2, [pc, #64]	; (800053c <main+0x29c>)
 80004fa:	4293      	cmp	r3, r2
 80004fc:	d9f8      	bls.n	80004f0 <main+0x250>
					key='6';
 80004fe:	2336      	movs	r3, #54	; 0x36
 8000500:	70fb      	strb	r3, [r7, #3]
					printf("%c\n",key);
 8000502:	78fb      	ldrb	r3, [r7, #3]
 8000504:	4619      	mov	r1, r3
 8000506:	480e      	ldr	r0, [pc, #56]	; (8000540 <main+0x2a0>)
 8000508:	f000 f9b4 	bl	8000874 <iprintf>
				}


		if (p_gpiod_idr->idr11==0)
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	785b      	ldrb	r3, [r3, #1]
 8000510:	f003 0308 	and.w	r3, r3, #8
 8000514:	b2db      	uxtb	r3, r3
 8000516:	2b00      	cmp	r3, #0
 8000518:	d122      	bne.n	8000560 <main+0x2c0>
				{
					for (uint32_t i=0; i<1000000; i++);
 800051a:	2300      	movs	r3, #0
 800051c:	643b      	str	r3, [r7, #64]	; 0x40
 800051e:	e014      	b.n	800054a <main+0x2aa>
 8000520:	40023830 	.word	0x40023830
 8000524:	40020000 	.word	0x40020000
 8000528:	40020c00 	.word	0x40020c00
 800052c:	40020c14 	.word	0x40020c14
 8000530:	40020010 	.word	0x40020010
 8000534:	40020c0c 	.word	0x40020c0c
 8000538:	40020c10 	.word	0x40020c10
 800053c:	000f423f 	.word	0x000f423f
 8000540:	08001c90 	.word	0x08001c90
 8000544:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000546:	3301      	adds	r3, #1
 8000548:	643b      	str	r3, [r7, #64]	; 0x40
 800054a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800054c:	4a7e      	ldr	r2, [pc, #504]	; (8000748 <main+0x4a8>)
 800054e:	4293      	cmp	r3, r2
 8000550:	d9f8      	bls.n	8000544 <main+0x2a4>
					key='B';
 8000552:	2342      	movs	r3, #66	; 0x42
 8000554:	70fb      	strb	r3, [r7, #3]
					printf("%c\n",key);
 8000556:	78fb      	ldrb	r3, [r7, #3]
 8000558:	4619      	mov	r1, r3
 800055a:	487c      	ldr	r0, [pc, #496]	; (800074c <main+0x4ac>)
 800055c:	f000 f98a 	bl	8000874 <iprintf>
				}


//Make R3 low
	p_gpiod_odr->odr0=1;
 8000560:	693a      	ldr	r2, [r7, #16]
 8000562:	7813      	ldrb	r3, [r2, #0]
 8000564:	f043 0301 	orr.w	r3, r3, #1
 8000568:	7013      	strb	r3, [r2, #0]
	p_gpiod_odr->odr1=1;
 800056a:	693a      	ldr	r2, [r7, #16]
 800056c:	7813      	ldrb	r3, [r2, #0]
 800056e:	f043 0302 	orr.w	r3, r3, #2
 8000572:	7013      	strb	r3, [r2, #0]
	p_gpiod_odr->odr2=1;
 8000574:	693a      	ldr	r2, [r7, #16]
 8000576:	7813      	ldrb	r3, [r2, #0]
 8000578:	f043 0304 	orr.w	r3, r3, #4
 800057c:	7013      	strb	r3, [r2, #0]
	p_gpiod_odr->odr3=1;
 800057e:	693a      	ldr	r2, [r7, #16]
 8000580:	7813      	ldrb	r3, [r2, #0]
 8000582:	f043 0308 	orr.w	r3, r3, #8
 8000586:	7013      	strb	r3, [r2, #0]
	p_gpiod_odr->odr2=0;
 8000588:	693a      	ldr	r2, [r7, #16]
 800058a:	7813      	ldrb	r3, [r2, #0]
 800058c:	f36f 0382 	bfc	r3, #2, #1
 8000590:	7013      	strb	r3, [r2, #0]
		if (p_gpiod_idr->idr8==0)
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	785b      	ldrb	r3, [r3, #1]
 8000596:	f003 0301 	and.w	r3, r3, #1
 800059a:	b2db      	uxtb	r3, r3
 800059c:	2b00      	cmp	r3, #0
 800059e:	d110      	bne.n	80005c2 <main+0x322>
		{
			for (uint32_t i=0; i<1000000; i++);
 80005a0:	2300      	movs	r3, #0
 80005a2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80005a4:	e002      	b.n	80005ac <main+0x30c>
 80005a6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80005a8:	3301      	adds	r3, #1
 80005aa:	63fb      	str	r3, [r7, #60]	; 0x3c
 80005ac:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80005ae:	4a66      	ldr	r2, [pc, #408]	; (8000748 <main+0x4a8>)
 80005b0:	4293      	cmp	r3, r2
 80005b2:	d9f8      	bls.n	80005a6 <main+0x306>
			key='7';
 80005b4:	2337      	movs	r3, #55	; 0x37
 80005b6:	70fb      	strb	r3, [r7, #3]
			printf("%c\n",key);
 80005b8:	78fb      	ldrb	r3, [r7, #3]
 80005ba:	4619      	mov	r1, r3
 80005bc:	4863      	ldr	r0, [pc, #396]	; (800074c <main+0x4ac>)
 80005be:	f000 f959 	bl	8000874 <iprintf>
		}
		if (p_gpiod_idr->idr9==0)
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	785b      	ldrb	r3, [r3, #1]
 80005c6:	f003 0302 	and.w	r3, r3, #2
 80005ca:	b2db      	uxtb	r3, r3
 80005cc:	2b00      	cmp	r3, #0
 80005ce:	d110      	bne.n	80005f2 <main+0x352>
			{
				for (uint32_t i=0; i<1000000; i++);
 80005d0:	2300      	movs	r3, #0
 80005d2:	63bb      	str	r3, [r7, #56]	; 0x38
 80005d4:	e002      	b.n	80005dc <main+0x33c>
 80005d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80005d8:	3301      	adds	r3, #1
 80005da:	63bb      	str	r3, [r7, #56]	; 0x38
 80005dc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80005de:	4a5a      	ldr	r2, [pc, #360]	; (8000748 <main+0x4a8>)
 80005e0:	4293      	cmp	r3, r2
 80005e2:	d9f8      	bls.n	80005d6 <main+0x336>
				key='8';
 80005e4:	2338      	movs	r3, #56	; 0x38
 80005e6:	70fb      	strb	r3, [r7, #3]
				printf("%c\n",key);
 80005e8:	78fb      	ldrb	r3, [r7, #3]
 80005ea:	4619      	mov	r1, r3
 80005ec:	4857      	ldr	r0, [pc, #348]	; (800074c <main+0x4ac>)
 80005ee:	f000 f941 	bl	8000874 <iprintf>
			}

		if (p_gpiod_idr->idr10==0)
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	785b      	ldrb	r3, [r3, #1]
 80005f6:	f003 0304 	and.w	r3, r3, #4
 80005fa:	b2db      	uxtb	r3, r3
 80005fc:	2b00      	cmp	r3, #0
 80005fe:	d110      	bne.n	8000622 <main+0x382>
				{
					for (uint32_t i=0; i<1000000; i++);
 8000600:	2300      	movs	r3, #0
 8000602:	637b      	str	r3, [r7, #52]	; 0x34
 8000604:	e002      	b.n	800060c <main+0x36c>
 8000606:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000608:	3301      	adds	r3, #1
 800060a:	637b      	str	r3, [r7, #52]	; 0x34
 800060c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800060e:	4a4e      	ldr	r2, [pc, #312]	; (8000748 <main+0x4a8>)
 8000610:	4293      	cmp	r3, r2
 8000612:	d9f8      	bls.n	8000606 <main+0x366>
					key='9';
 8000614:	2339      	movs	r3, #57	; 0x39
 8000616:	70fb      	strb	r3, [r7, #3]
					printf("%c\n",key);
 8000618:	78fb      	ldrb	r3, [r7, #3]
 800061a:	4619      	mov	r1, r3
 800061c:	484b      	ldr	r0, [pc, #300]	; (800074c <main+0x4ac>)
 800061e:	f000 f929 	bl	8000874 <iprintf>
				}


		if (p_gpiod_idr->idr11==0)
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	785b      	ldrb	r3, [r3, #1]
 8000626:	f003 0308 	and.w	r3, r3, #8
 800062a:	b2db      	uxtb	r3, r3
 800062c:	2b00      	cmp	r3, #0
 800062e:	d110      	bne.n	8000652 <main+0x3b2>
				{
					for (uint32_t i=0; i<1000000; i++);
 8000630:	2300      	movs	r3, #0
 8000632:	633b      	str	r3, [r7, #48]	; 0x30
 8000634:	e002      	b.n	800063c <main+0x39c>
 8000636:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000638:	3301      	adds	r3, #1
 800063a:	633b      	str	r3, [r7, #48]	; 0x30
 800063c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800063e:	4a42      	ldr	r2, [pc, #264]	; (8000748 <main+0x4a8>)
 8000640:	4293      	cmp	r3, r2
 8000642:	d9f8      	bls.n	8000636 <main+0x396>
					key='C';
 8000644:	2343      	movs	r3, #67	; 0x43
 8000646:	70fb      	strb	r3, [r7, #3]
					printf("%c\n",key);
 8000648:	78fb      	ldrb	r3, [r7, #3]
 800064a:	4619      	mov	r1, r3
 800064c:	483f      	ldr	r0, [pc, #252]	; (800074c <main+0x4ac>)
 800064e:	f000 f911 	bl	8000874 <iprintf>
				}


	//Make R4 low
		p_gpiod_odr->odr0=1;
 8000652:	693a      	ldr	r2, [r7, #16]
 8000654:	7813      	ldrb	r3, [r2, #0]
 8000656:	f043 0301 	orr.w	r3, r3, #1
 800065a:	7013      	strb	r3, [r2, #0]
		p_gpiod_odr->odr1=1;
 800065c:	693a      	ldr	r2, [r7, #16]
 800065e:	7813      	ldrb	r3, [r2, #0]
 8000660:	f043 0302 	orr.w	r3, r3, #2
 8000664:	7013      	strb	r3, [r2, #0]
		p_gpiod_odr->odr2=1;
 8000666:	693a      	ldr	r2, [r7, #16]
 8000668:	7813      	ldrb	r3, [r2, #0]
 800066a:	f043 0304 	orr.w	r3, r3, #4
 800066e:	7013      	strb	r3, [r2, #0]
		p_gpiod_odr->odr3=1;
 8000670:	693a      	ldr	r2, [r7, #16]
 8000672:	7813      	ldrb	r3, [r2, #0]
 8000674:	f043 0308 	orr.w	r3, r3, #8
 8000678:	7013      	strb	r3, [r2, #0]
		p_gpiod_odr->odr3=0;
 800067a:	693a      	ldr	r2, [r7, #16]
 800067c:	7813      	ldrb	r3, [r2, #0]
 800067e:	f36f 03c3 	bfc	r3, #3, #1
 8000682:	7013      	strb	r3, [r2, #0]
			if (p_gpiod_idr->idr8==0)
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	785b      	ldrb	r3, [r3, #1]
 8000688:	f003 0301 	and.w	r3, r3, #1
 800068c:	b2db      	uxtb	r3, r3
 800068e:	2b00      	cmp	r3, #0
 8000690:	d110      	bne.n	80006b4 <main+0x414>
			{
				for (uint32_t i=0; i<1000000; i++);
 8000692:	2300      	movs	r3, #0
 8000694:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000696:	e002      	b.n	800069e <main+0x3fe>
 8000698:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800069a:	3301      	adds	r3, #1
 800069c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800069e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80006a0:	4a29      	ldr	r2, [pc, #164]	; (8000748 <main+0x4a8>)
 80006a2:	4293      	cmp	r3, r2
 80006a4:	d9f8      	bls.n	8000698 <main+0x3f8>
				key='*';
 80006a6:	232a      	movs	r3, #42	; 0x2a
 80006a8:	70fb      	strb	r3, [r7, #3]
				printf("%c\n",key);
 80006aa:	78fb      	ldrb	r3, [r7, #3]
 80006ac:	4619      	mov	r1, r3
 80006ae:	4827      	ldr	r0, [pc, #156]	; (800074c <main+0x4ac>)
 80006b0:	f000 f8e0 	bl	8000874 <iprintf>
			}
			if (p_gpiod_idr->idr9==0)
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	785b      	ldrb	r3, [r3, #1]
 80006b8:	f003 0302 	and.w	r3, r3, #2
 80006bc:	b2db      	uxtb	r3, r3
 80006be:	2b00      	cmp	r3, #0
 80006c0:	d110      	bne.n	80006e4 <main+0x444>
				{
					for (uint32_t i=0; i<1000000; i++);
 80006c2:	2300      	movs	r3, #0
 80006c4:	62bb      	str	r3, [r7, #40]	; 0x28
 80006c6:	e002      	b.n	80006ce <main+0x42e>
 80006c8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80006ca:	3301      	adds	r3, #1
 80006cc:	62bb      	str	r3, [r7, #40]	; 0x28
 80006ce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80006d0:	4a1d      	ldr	r2, [pc, #116]	; (8000748 <main+0x4a8>)
 80006d2:	4293      	cmp	r3, r2
 80006d4:	d9f8      	bls.n	80006c8 <main+0x428>
					key='0';
 80006d6:	2330      	movs	r3, #48	; 0x30
 80006d8:	70fb      	strb	r3, [r7, #3]
					printf("%c\n",key);
 80006da:	78fb      	ldrb	r3, [r7, #3]
 80006dc:	4619      	mov	r1, r3
 80006de:	481b      	ldr	r0, [pc, #108]	; (800074c <main+0x4ac>)
 80006e0:	f000 f8c8 	bl	8000874 <iprintf>
				}

			if (p_gpiod_idr->idr10==0)
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	785b      	ldrb	r3, [r3, #1]
 80006e8:	f003 0304 	and.w	r3, r3, #4
 80006ec:	b2db      	uxtb	r3, r3
 80006ee:	2b00      	cmp	r3, #0
 80006f0:	d110      	bne.n	8000714 <main+0x474>
					{
						for (uint32_t i=0; i<1000000; i++);
 80006f2:	2300      	movs	r3, #0
 80006f4:	627b      	str	r3, [r7, #36]	; 0x24
 80006f6:	e002      	b.n	80006fe <main+0x45e>
 80006f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006fa:	3301      	adds	r3, #1
 80006fc:	627b      	str	r3, [r7, #36]	; 0x24
 80006fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000700:	4a11      	ldr	r2, [pc, #68]	; (8000748 <main+0x4a8>)
 8000702:	4293      	cmp	r3, r2
 8000704:	d9f8      	bls.n	80006f8 <main+0x458>
						key='#';
 8000706:	2323      	movs	r3, #35	; 0x23
 8000708:	70fb      	strb	r3, [r7, #3]
						printf("%c\n",key);
 800070a:	78fb      	ldrb	r3, [r7, #3]
 800070c:	4619      	mov	r1, r3
 800070e:	480f      	ldr	r0, [pc, #60]	; (800074c <main+0x4ac>)
 8000710:	f000 f8b0 	bl	8000874 <iprintf>
					}


			if (p_gpiod_idr->idr11==0)
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	785b      	ldrb	r3, [r3, #1]
 8000718:	f003 0308 	and.w	r3, r3, #8
 800071c:	b2db      	uxtb	r3, r3
 800071e:	2b00      	cmp	r3, #0
 8000720:	f47f ae1a 	bne.w	8000358 <main+0xb8>
					{
						for (uint32_t i=0; i<1000000; i++);
 8000724:	2300      	movs	r3, #0
 8000726:	623b      	str	r3, [r7, #32]
 8000728:	e002      	b.n	8000730 <main+0x490>
 800072a:	6a3b      	ldr	r3, [r7, #32]
 800072c:	3301      	adds	r3, #1
 800072e:	623b      	str	r3, [r7, #32]
 8000730:	6a3b      	ldr	r3, [r7, #32]
 8000732:	4a05      	ldr	r2, [pc, #20]	; (8000748 <main+0x4a8>)
 8000734:	4293      	cmp	r3, r2
 8000736:	d9f8      	bls.n	800072a <main+0x48a>
						key='D';
 8000738:	2344      	movs	r3, #68	; 0x44
 800073a:	70fb      	strb	r3, [r7, #3]
						printf("%c\n",key);
 800073c:	78fb      	ldrb	r3, [r7, #3]
 800073e:	4619      	mov	r1, r3
 8000740:	4802      	ldr	r0, [pc, #8]	; (800074c <main+0x4ac>)
 8000742:	f000 f897 	bl	8000874 <iprintf>
	p_gpiod_odr->odr0=1;
 8000746:	e607      	b.n	8000358 <main+0xb8>
 8000748:	000f423f 	.word	0x000f423f
 800074c:	08001c90 	.word	0x08001c90

08000750 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000750:	b580      	push	{r7, lr}
 8000752:	b086      	sub	sp, #24
 8000754:	af00      	add	r7, sp, #0
 8000756:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000758:	4a14      	ldr	r2, [pc, #80]	; (80007ac <_sbrk+0x5c>)
 800075a:	4b15      	ldr	r3, [pc, #84]	; (80007b0 <_sbrk+0x60>)
 800075c:	1ad3      	subs	r3, r2, r3
 800075e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000760:	697b      	ldr	r3, [r7, #20]
 8000762:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000764:	4b13      	ldr	r3, [pc, #76]	; (80007b4 <_sbrk+0x64>)
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	2b00      	cmp	r3, #0
 800076a:	d102      	bne.n	8000772 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800076c:	4b11      	ldr	r3, [pc, #68]	; (80007b4 <_sbrk+0x64>)
 800076e:	4a12      	ldr	r2, [pc, #72]	; (80007b8 <_sbrk+0x68>)
 8000770:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000772:	4b10      	ldr	r3, [pc, #64]	; (80007b4 <_sbrk+0x64>)
 8000774:	681a      	ldr	r2, [r3, #0]
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	4413      	add	r3, r2
 800077a:	693a      	ldr	r2, [r7, #16]
 800077c:	429a      	cmp	r2, r3
 800077e:	d207      	bcs.n	8000790 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000780:	f000 f846 	bl	8000810 <__errno>
 8000784:	4603      	mov	r3, r0
 8000786:	220c      	movs	r2, #12
 8000788:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800078a:	f04f 33ff 	mov.w	r3, #4294967295
 800078e:	e009      	b.n	80007a4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000790:	4b08      	ldr	r3, [pc, #32]	; (80007b4 <_sbrk+0x64>)
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000796:	4b07      	ldr	r3, [pc, #28]	; (80007b4 <_sbrk+0x64>)
 8000798:	681a      	ldr	r2, [r3, #0]
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	4413      	add	r3, r2
 800079e:	4a05      	ldr	r2, [pc, #20]	; (80007b4 <_sbrk+0x64>)
 80007a0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80007a2:	68fb      	ldr	r3, [r7, #12]
}
 80007a4:	4618      	mov	r0, r3
 80007a6:	3718      	adds	r7, #24
 80007a8:	46bd      	mov	sp, r7
 80007aa:	bd80      	pop	{r7, pc}
 80007ac:	20020000 	.word	0x20020000
 80007b0:	00000400 	.word	0x00000400
 80007b4:	20000088 	.word	0x20000088
 80007b8:	20000150 	.word	0x20000150

080007bc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80007bc:	480d      	ldr	r0, [pc, #52]	; (80007f4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80007be:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80007c0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80007c4:	480c      	ldr	r0, [pc, #48]	; (80007f8 <LoopForever+0x6>)
  ldr r1, =_edata
 80007c6:	490d      	ldr	r1, [pc, #52]	; (80007fc <LoopForever+0xa>)
  ldr r2, =_sidata
 80007c8:	4a0d      	ldr	r2, [pc, #52]	; (8000800 <LoopForever+0xe>)
  movs r3, #0
 80007ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007cc:	e002      	b.n	80007d4 <LoopCopyDataInit>

080007ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007d2:	3304      	adds	r3, #4

080007d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80007d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80007d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80007d8:	d3f9      	bcc.n	80007ce <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80007da:	4a0a      	ldr	r2, [pc, #40]	; (8000804 <LoopForever+0x12>)
  ldr r4, =_ebss
 80007dc:	4c0a      	ldr	r4, [pc, #40]	; (8000808 <LoopForever+0x16>)
  movs r3, #0
 80007de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007e0:	e001      	b.n	80007e6 <LoopFillZerobss>

080007e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007e4:	3204      	adds	r2, #4

080007e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007e8:	d3fb      	bcc.n	80007e2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80007ea:	f000 f817 	bl	800081c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80007ee:	f7ff fd57 	bl	80002a0 <main>

080007f2 <LoopForever>:

LoopForever:
    b LoopForever
 80007f2:	e7fe      	b.n	80007f2 <LoopForever>
  ldr   r0, =_estack
 80007f4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80007f8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007fc:	2000006c 	.word	0x2000006c
  ldr r2, =_sidata
 8000800:	08001d50 	.word	0x08001d50
  ldr r2, =_sbss
 8000804:	2000006c 	.word	0x2000006c
  ldr r4, =_ebss
 8000808:	20000150 	.word	0x20000150

0800080c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800080c:	e7fe      	b.n	800080c <ADC_IRQHandler>
	...

08000810 <__errno>:
 8000810:	4b01      	ldr	r3, [pc, #4]	; (8000818 <__errno+0x8>)
 8000812:	6818      	ldr	r0, [r3, #0]
 8000814:	4770      	bx	lr
 8000816:	bf00      	nop
 8000818:	20000000 	.word	0x20000000

0800081c <__libc_init_array>:
 800081c:	b570      	push	{r4, r5, r6, lr}
 800081e:	4d0d      	ldr	r5, [pc, #52]	; (8000854 <__libc_init_array+0x38>)
 8000820:	4c0d      	ldr	r4, [pc, #52]	; (8000858 <__libc_init_array+0x3c>)
 8000822:	1b64      	subs	r4, r4, r5
 8000824:	10a4      	asrs	r4, r4, #2
 8000826:	2600      	movs	r6, #0
 8000828:	42a6      	cmp	r6, r4
 800082a:	d109      	bne.n	8000840 <__libc_init_array+0x24>
 800082c:	4d0b      	ldr	r5, [pc, #44]	; (800085c <__libc_init_array+0x40>)
 800082e:	4c0c      	ldr	r4, [pc, #48]	; (8000860 <__libc_init_array+0x44>)
 8000830:	f001 fa22 	bl	8001c78 <_init>
 8000834:	1b64      	subs	r4, r4, r5
 8000836:	10a4      	asrs	r4, r4, #2
 8000838:	2600      	movs	r6, #0
 800083a:	42a6      	cmp	r6, r4
 800083c:	d105      	bne.n	800084a <__libc_init_array+0x2e>
 800083e:	bd70      	pop	{r4, r5, r6, pc}
 8000840:	f855 3b04 	ldr.w	r3, [r5], #4
 8000844:	4798      	blx	r3
 8000846:	3601      	adds	r6, #1
 8000848:	e7ee      	b.n	8000828 <__libc_init_array+0xc>
 800084a:	f855 3b04 	ldr.w	r3, [r5], #4
 800084e:	4798      	blx	r3
 8000850:	3601      	adds	r6, #1
 8000852:	e7f2      	b.n	800083a <__libc_init_array+0x1e>
 8000854:	08001d48 	.word	0x08001d48
 8000858:	08001d48 	.word	0x08001d48
 800085c:	08001d48 	.word	0x08001d48
 8000860:	08001d4c 	.word	0x08001d4c

08000864 <memset>:
 8000864:	4402      	add	r2, r0
 8000866:	4603      	mov	r3, r0
 8000868:	4293      	cmp	r3, r2
 800086a:	d100      	bne.n	800086e <memset+0xa>
 800086c:	4770      	bx	lr
 800086e:	f803 1b01 	strb.w	r1, [r3], #1
 8000872:	e7f9      	b.n	8000868 <memset+0x4>

08000874 <iprintf>:
 8000874:	b40f      	push	{r0, r1, r2, r3}
 8000876:	4b0a      	ldr	r3, [pc, #40]	; (80008a0 <iprintf+0x2c>)
 8000878:	b513      	push	{r0, r1, r4, lr}
 800087a:	681c      	ldr	r4, [r3, #0]
 800087c:	b124      	cbz	r4, 8000888 <iprintf+0x14>
 800087e:	69a3      	ldr	r3, [r4, #24]
 8000880:	b913      	cbnz	r3, 8000888 <iprintf+0x14>
 8000882:	4620      	mov	r0, r4
 8000884:	f000 f866 	bl	8000954 <__sinit>
 8000888:	ab05      	add	r3, sp, #20
 800088a:	9a04      	ldr	r2, [sp, #16]
 800088c:	68a1      	ldr	r1, [r4, #8]
 800088e:	9301      	str	r3, [sp, #4]
 8000890:	4620      	mov	r0, r4
 8000892:	f000 f983 	bl	8000b9c <_vfiprintf_r>
 8000896:	b002      	add	sp, #8
 8000898:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800089c:	b004      	add	sp, #16
 800089e:	4770      	bx	lr
 80008a0:	20000000 	.word	0x20000000

080008a4 <std>:
 80008a4:	2300      	movs	r3, #0
 80008a6:	b510      	push	{r4, lr}
 80008a8:	4604      	mov	r4, r0
 80008aa:	e9c0 3300 	strd	r3, r3, [r0]
 80008ae:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80008b2:	6083      	str	r3, [r0, #8]
 80008b4:	8181      	strh	r1, [r0, #12]
 80008b6:	6643      	str	r3, [r0, #100]	; 0x64
 80008b8:	81c2      	strh	r2, [r0, #14]
 80008ba:	6183      	str	r3, [r0, #24]
 80008bc:	4619      	mov	r1, r3
 80008be:	2208      	movs	r2, #8
 80008c0:	305c      	adds	r0, #92	; 0x5c
 80008c2:	f7ff ffcf 	bl	8000864 <memset>
 80008c6:	4b05      	ldr	r3, [pc, #20]	; (80008dc <std+0x38>)
 80008c8:	6263      	str	r3, [r4, #36]	; 0x24
 80008ca:	4b05      	ldr	r3, [pc, #20]	; (80008e0 <std+0x3c>)
 80008cc:	62a3      	str	r3, [r4, #40]	; 0x28
 80008ce:	4b05      	ldr	r3, [pc, #20]	; (80008e4 <std+0x40>)
 80008d0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80008d2:	4b05      	ldr	r3, [pc, #20]	; (80008e8 <std+0x44>)
 80008d4:	6224      	str	r4, [r4, #32]
 80008d6:	6323      	str	r3, [r4, #48]	; 0x30
 80008d8:	bd10      	pop	{r4, pc}
 80008da:	bf00      	nop
 80008dc:	08001145 	.word	0x08001145
 80008e0:	08001167 	.word	0x08001167
 80008e4:	0800119f 	.word	0x0800119f
 80008e8:	080011c3 	.word	0x080011c3

080008ec <_cleanup_r>:
 80008ec:	4901      	ldr	r1, [pc, #4]	; (80008f4 <_cleanup_r+0x8>)
 80008ee:	f000 b8af 	b.w	8000a50 <_fwalk_reent>
 80008f2:	bf00      	nop
 80008f4:	0800149d 	.word	0x0800149d

080008f8 <__sfmoreglue>:
 80008f8:	b570      	push	{r4, r5, r6, lr}
 80008fa:	1e4a      	subs	r2, r1, #1
 80008fc:	2568      	movs	r5, #104	; 0x68
 80008fe:	4355      	muls	r5, r2
 8000900:	460e      	mov	r6, r1
 8000902:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000906:	f000 f8c5 	bl	8000a94 <_malloc_r>
 800090a:	4604      	mov	r4, r0
 800090c:	b140      	cbz	r0, 8000920 <__sfmoreglue+0x28>
 800090e:	2100      	movs	r1, #0
 8000910:	e9c0 1600 	strd	r1, r6, [r0]
 8000914:	300c      	adds	r0, #12
 8000916:	60a0      	str	r0, [r4, #8]
 8000918:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800091c:	f7ff ffa2 	bl	8000864 <memset>
 8000920:	4620      	mov	r0, r4
 8000922:	bd70      	pop	{r4, r5, r6, pc}

08000924 <__sfp_lock_acquire>:
 8000924:	4801      	ldr	r0, [pc, #4]	; (800092c <__sfp_lock_acquire+0x8>)
 8000926:	f000 b8b3 	b.w	8000a90 <__retarget_lock_acquire_recursive>
 800092a:	bf00      	nop
 800092c:	20000148 	.word	0x20000148

08000930 <__sfp_lock_release>:
 8000930:	4801      	ldr	r0, [pc, #4]	; (8000938 <__sfp_lock_release+0x8>)
 8000932:	f000 b8ae 	b.w	8000a92 <__retarget_lock_release_recursive>
 8000936:	bf00      	nop
 8000938:	20000148 	.word	0x20000148

0800093c <__sinit_lock_acquire>:
 800093c:	4801      	ldr	r0, [pc, #4]	; (8000944 <__sinit_lock_acquire+0x8>)
 800093e:	f000 b8a7 	b.w	8000a90 <__retarget_lock_acquire_recursive>
 8000942:	bf00      	nop
 8000944:	20000143 	.word	0x20000143

08000948 <__sinit_lock_release>:
 8000948:	4801      	ldr	r0, [pc, #4]	; (8000950 <__sinit_lock_release+0x8>)
 800094a:	f000 b8a2 	b.w	8000a92 <__retarget_lock_release_recursive>
 800094e:	bf00      	nop
 8000950:	20000143 	.word	0x20000143

08000954 <__sinit>:
 8000954:	b510      	push	{r4, lr}
 8000956:	4604      	mov	r4, r0
 8000958:	f7ff fff0 	bl	800093c <__sinit_lock_acquire>
 800095c:	69a3      	ldr	r3, [r4, #24]
 800095e:	b11b      	cbz	r3, 8000968 <__sinit+0x14>
 8000960:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000964:	f7ff bff0 	b.w	8000948 <__sinit_lock_release>
 8000968:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800096c:	6523      	str	r3, [r4, #80]	; 0x50
 800096e:	4b13      	ldr	r3, [pc, #76]	; (80009bc <__sinit+0x68>)
 8000970:	4a13      	ldr	r2, [pc, #76]	; (80009c0 <__sinit+0x6c>)
 8000972:	681b      	ldr	r3, [r3, #0]
 8000974:	62a2      	str	r2, [r4, #40]	; 0x28
 8000976:	42a3      	cmp	r3, r4
 8000978:	bf04      	itt	eq
 800097a:	2301      	moveq	r3, #1
 800097c:	61a3      	streq	r3, [r4, #24]
 800097e:	4620      	mov	r0, r4
 8000980:	f000 f820 	bl	80009c4 <__sfp>
 8000984:	6060      	str	r0, [r4, #4]
 8000986:	4620      	mov	r0, r4
 8000988:	f000 f81c 	bl	80009c4 <__sfp>
 800098c:	60a0      	str	r0, [r4, #8]
 800098e:	4620      	mov	r0, r4
 8000990:	f000 f818 	bl	80009c4 <__sfp>
 8000994:	2200      	movs	r2, #0
 8000996:	60e0      	str	r0, [r4, #12]
 8000998:	2104      	movs	r1, #4
 800099a:	6860      	ldr	r0, [r4, #4]
 800099c:	f7ff ff82 	bl	80008a4 <std>
 80009a0:	68a0      	ldr	r0, [r4, #8]
 80009a2:	2201      	movs	r2, #1
 80009a4:	2109      	movs	r1, #9
 80009a6:	f7ff ff7d 	bl	80008a4 <std>
 80009aa:	68e0      	ldr	r0, [r4, #12]
 80009ac:	2202      	movs	r2, #2
 80009ae:	2112      	movs	r1, #18
 80009b0:	f7ff ff78 	bl	80008a4 <std>
 80009b4:	2301      	movs	r3, #1
 80009b6:	61a3      	str	r3, [r4, #24]
 80009b8:	e7d2      	b.n	8000960 <__sinit+0xc>
 80009ba:	bf00      	nop
 80009bc:	08001c94 	.word	0x08001c94
 80009c0:	080008ed 	.word	0x080008ed

080009c4 <__sfp>:
 80009c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009c6:	4607      	mov	r7, r0
 80009c8:	f7ff ffac 	bl	8000924 <__sfp_lock_acquire>
 80009cc:	4b1e      	ldr	r3, [pc, #120]	; (8000a48 <__sfp+0x84>)
 80009ce:	681e      	ldr	r6, [r3, #0]
 80009d0:	69b3      	ldr	r3, [r6, #24]
 80009d2:	b913      	cbnz	r3, 80009da <__sfp+0x16>
 80009d4:	4630      	mov	r0, r6
 80009d6:	f7ff ffbd 	bl	8000954 <__sinit>
 80009da:	3648      	adds	r6, #72	; 0x48
 80009dc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80009e0:	3b01      	subs	r3, #1
 80009e2:	d503      	bpl.n	80009ec <__sfp+0x28>
 80009e4:	6833      	ldr	r3, [r6, #0]
 80009e6:	b30b      	cbz	r3, 8000a2c <__sfp+0x68>
 80009e8:	6836      	ldr	r6, [r6, #0]
 80009ea:	e7f7      	b.n	80009dc <__sfp+0x18>
 80009ec:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80009f0:	b9d5      	cbnz	r5, 8000a28 <__sfp+0x64>
 80009f2:	4b16      	ldr	r3, [pc, #88]	; (8000a4c <__sfp+0x88>)
 80009f4:	60e3      	str	r3, [r4, #12]
 80009f6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80009fa:	6665      	str	r5, [r4, #100]	; 0x64
 80009fc:	f000 f847 	bl	8000a8e <__retarget_lock_init_recursive>
 8000a00:	f7ff ff96 	bl	8000930 <__sfp_lock_release>
 8000a04:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000a08:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000a0c:	6025      	str	r5, [r4, #0]
 8000a0e:	61a5      	str	r5, [r4, #24]
 8000a10:	2208      	movs	r2, #8
 8000a12:	4629      	mov	r1, r5
 8000a14:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a18:	f7ff ff24 	bl	8000864 <memset>
 8000a1c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a20:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a24:	4620      	mov	r0, r4
 8000a26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a28:	3468      	adds	r4, #104	; 0x68
 8000a2a:	e7d9      	b.n	80009e0 <__sfp+0x1c>
 8000a2c:	2104      	movs	r1, #4
 8000a2e:	4638      	mov	r0, r7
 8000a30:	f7ff ff62 	bl	80008f8 <__sfmoreglue>
 8000a34:	4604      	mov	r4, r0
 8000a36:	6030      	str	r0, [r6, #0]
 8000a38:	2800      	cmp	r0, #0
 8000a3a:	d1d5      	bne.n	80009e8 <__sfp+0x24>
 8000a3c:	f7ff ff78 	bl	8000930 <__sfp_lock_release>
 8000a40:	230c      	movs	r3, #12
 8000a42:	603b      	str	r3, [r7, #0]
 8000a44:	e7ee      	b.n	8000a24 <__sfp+0x60>
 8000a46:	bf00      	nop
 8000a48:	08001c94 	.word	0x08001c94
 8000a4c:	ffff0001 	.word	0xffff0001

08000a50 <_fwalk_reent>:
 8000a50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a54:	4606      	mov	r6, r0
 8000a56:	4688      	mov	r8, r1
 8000a58:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a5c:	2700      	movs	r7, #0
 8000a5e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000a62:	f1b9 0901 	subs.w	r9, r9, #1
 8000a66:	d505      	bpl.n	8000a74 <_fwalk_reent+0x24>
 8000a68:	6824      	ldr	r4, [r4, #0]
 8000a6a:	2c00      	cmp	r4, #0
 8000a6c:	d1f7      	bne.n	8000a5e <_fwalk_reent+0xe>
 8000a6e:	4638      	mov	r0, r7
 8000a70:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a74:	89ab      	ldrh	r3, [r5, #12]
 8000a76:	2b01      	cmp	r3, #1
 8000a78:	d907      	bls.n	8000a8a <_fwalk_reent+0x3a>
 8000a7a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a7e:	3301      	adds	r3, #1
 8000a80:	d003      	beq.n	8000a8a <_fwalk_reent+0x3a>
 8000a82:	4629      	mov	r1, r5
 8000a84:	4630      	mov	r0, r6
 8000a86:	47c0      	blx	r8
 8000a88:	4307      	orrs	r7, r0
 8000a8a:	3568      	adds	r5, #104	; 0x68
 8000a8c:	e7e9      	b.n	8000a62 <_fwalk_reent+0x12>

08000a8e <__retarget_lock_init_recursive>:
 8000a8e:	4770      	bx	lr

08000a90 <__retarget_lock_acquire_recursive>:
 8000a90:	4770      	bx	lr

08000a92 <__retarget_lock_release_recursive>:
 8000a92:	4770      	bx	lr

08000a94 <_malloc_r>:
 8000a94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a96:	1ccd      	adds	r5, r1, #3
 8000a98:	f025 0503 	bic.w	r5, r5, #3
 8000a9c:	3508      	adds	r5, #8
 8000a9e:	2d0c      	cmp	r5, #12
 8000aa0:	bf38      	it	cc
 8000aa2:	250c      	movcc	r5, #12
 8000aa4:	2d00      	cmp	r5, #0
 8000aa6:	4606      	mov	r6, r0
 8000aa8:	db01      	blt.n	8000aae <_malloc_r+0x1a>
 8000aaa:	42a9      	cmp	r1, r5
 8000aac:	d903      	bls.n	8000ab6 <_malloc_r+0x22>
 8000aae:	230c      	movs	r3, #12
 8000ab0:	6033      	str	r3, [r6, #0]
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ab6:	f000 fda3 	bl	8001600 <__malloc_lock>
 8000aba:	4921      	ldr	r1, [pc, #132]	; (8000b40 <_malloc_r+0xac>)
 8000abc:	680a      	ldr	r2, [r1, #0]
 8000abe:	4614      	mov	r4, r2
 8000ac0:	b99c      	cbnz	r4, 8000aea <_malloc_r+0x56>
 8000ac2:	4f20      	ldr	r7, [pc, #128]	; (8000b44 <_malloc_r+0xb0>)
 8000ac4:	683b      	ldr	r3, [r7, #0]
 8000ac6:	b923      	cbnz	r3, 8000ad2 <_malloc_r+0x3e>
 8000ac8:	4621      	mov	r1, r4
 8000aca:	4630      	mov	r0, r6
 8000acc:	f000 fb2a 	bl	8001124 <_sbrk_r>
 8000ad0:	6038      	str	r0, [r7, #0]
 8000ad2:	4629      	mov	r1, r5
 8000ad4:	4630      	mov	r0, r6
 8000ad6:	f000 fb25 	bl	8001124 <_sbrk_r>
 8000ada:	1c43      	adds	r3, r0, #1
 8000adc:	d123      	bne.n	8000b26 <_malloc_r+0x92>
 8000ade:	230c      	movs	r3, #12
 8000ae0:	6033      	str	r3, [r6, #0]
 8000ae2:	4630      	mov	r0, r6
 8000ae4:	f000 fd92 	bl	800160c <__malloc_unlock>
 8000ae8:	e7e3      	b.n	8000ab2 <_malloc_r+0x1e>
 8000aea:	6823      	ldr	r3, [r4, #0]
 8000aec:	1b5b      	subs	r3, r3, r5
 8000aee:	d417      	bmi.n	8000b20 <_malloc_r+0x8c>
 8000af0:	2b0b      	cmp	r3, #11
 8000af2:	d903      	bls.n	8000afc <_malloc_r+0x68>
 8000af4:	6023      	str	r3, [r4, #0]
 8000af6:	441c      	add	r4, r3
 8000af8:	6025      	str	r5, [r4, #0]
 8000afa:	e004      	b.n	8000b06 <_malloc_r+0x72>
 8000afc:	6863      	ldr	r3, [r4, #4]
 8000afe:	42a2      	cmp	r2, r4
 8000b00:	bf0c      	ite	eq
 8000b02:	600b      	streq	r3, [r1, #0]
 8000b04:	6053      	strne	r3, [r2, #4]
 8000b06:	4630      	mov	r0, r6
 8000b08:	f000 fd80 	bl	800160c <__malloc_unlock>
 8000b0c:	f104 000b 	add.w	r0, r4, #11
 8000b10:	1d23      	adds	r3, r4, #4
 8000b12:	f020 0007 	bic.w	r0, r0, #7
 8000b16:	1ac2      	subs	r2, r0, r3
 8000b18:	d0cc      	beq.n	8000ab4 <_malloc_r+0x20>
 8000b1a:	1a1b      	subs	r3, r3, r0
 8000b1c:	50a3      	str	r3, [r4, r2]
 8000b1e:	e7c9      	b.n	8000ab4 <_malloc_r+0x20>
 8000b20:	4622      	mov	r2, r4
 8000b22:	6864      	ldr	r4, [r4, #4]
 8000b24:	e7cc      	b.n	8000ac0 <_malloc_r+0x2c>
 8000b26:	1cc4      	adds	r4, r0, #3
 8000b28:	f024 0403 	bic.w	r4, r4, #3
 8000b2c:	42a0      	cmp	r0, r4
 8000b2e:	d0e3      	beq.n	8000af8 <_malloc_r+0x64>
 8000b30:	1a21      	subs	r1, r4, r0
 8000b32:	4630      	mov	r0, r6
 8000b34:	f000 faf6 	bl	8001124 <_sbrk_r>
 8000b38:	3001      	adds	r0, #1
 8000b3a:	d1dd      	bne.n	8000af8 <_malloc_r+0x64>
 8000b3c:	e7cf      	b.n	8000ade <_malloc_r+0x4a>
 8000b3e:	bf00      	nop
 8000b40:	2000008c 	.word	0x2000008c
 8000b44:	20000090 	.word	0x20000090

08000b48 <__sfputc_r>:
 8000b48:	6893      	ldr	r3, [r2, #8]
 8000b4a:	3b01      	subs	r3, #1
 8000b4c:	2b00      	cmp	r3, #0
 8000b4e:	b410      	push	{r4}
 8000b50:	6093      	str	r3, [r2, #8]
 8000b52:	da08      	bge.n	8000b66 <__sfputc_r+0x1e>
 8000b54:	6994      	ldr	r4, [r2, #24]
 8000b56:	42a3      	cmp	r3, r4
 8000b58:	db01      	blt.n	8000b5e <__sfputc_r+0x16>
 8000b5a:	290a      	cmp	r1, #10
 8000b5c:	d103      	bne.n	8000b66 <__sfputc_r+0x1e>
 8000b5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000b62:	f000 bb33 	b.w	80011cc <__swbuf_r>
 8000b66:	6813      	ldr	r3, [r2, #0]
 8000b68:	1c58      	adds	r0, r3, #1
 8000b6a:	6010      	str	r0, [r2, #0]
 8000b6c:	7019      	strb	r1, [r3, #0]
 8000b6e:	4608      	mov	r0, r1
 8000b70:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000b74:	4770      	bx	lr

08000b76 <__sfputs_r>:
 8000b76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b78:	4606      	mov	r6, r0
 8000b7a:	460f      	mov	r7, r1
 8000b7c:	4614      	mov	r4, r2
 8000b7e:	18d5      	adds	r5, r2, r3
 8000b80:	42ac      	cmp	r4, r5
 8000b82:	d101      	bne.n	8000b88 <__sfputs_r+0x12>
 8000b84:	2000      	movs	r0, #0
 8000b86:	e007      	b.n	8000b98 <__sfputs_r+0x22>
 8000b88:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b8c:	463a      	mov	r2, r7
 8000b8e:	4630      	mov	r0, r6
 8000b90:	f7ff ffda 	bl	8000b48 <__sfputc_r>
 8000b94:	1c43      	adds	r3, r0, #1
 8000b96:	d1f3      	bne.n	8000b80 <__sfputs_r+0xa>
 8000b98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000b9c <_vfiprintf_r>:
 8000b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ba0:	460d      	mov	r5, r1
 8000ba2:	b09d      	sub	sp, #116	; 0x74
 8000ba4:	4614      	mov	r4, r2
 8000ba6:	4698      	mov	r8, r3
 8000ba8:	4606      	mov	r6, r0
 8000baa:	b118      	cbz	r0, 8000bb4 <_vfiprintf_r+0x18>
 8000bac:	6983      	ldr	r3, [r0, #24]
 8000bae:	b90b      	cbnz	r3, 8000bb4 <_vfiprintf_r+0x18>
 8000bb0:	f7ff fed0 	bl	8000954 <__sinit>
 8000bb4:	4b89      	ldr	r3, [pc, #548]	; (8000ddc <_vfiprintf_r+0x240>)
 8000bb6:	429d      	cmp	r5, r3
 8000bb8:	d11b      	bne.n	8000bf2 <_vfiprintf_r+0x56>
 8000bba:	6875      	ldr	r5, [r6, #4]
 8000bbc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000bbe:	07d9      	lsls	r1, r3, #31
 8000bc0:	d405      	bmi.n	8000bce <_vfiprintf_r+0x32>
 8000bc2:	89ab      	ldrh	r3, [r5, #12]
 8000bc4:	059a      	lsls	r2, r3, #22
 8000bc6:	d402      	bmi.n	8000bce <_vfiprintf_r+0x32>
 8000bc8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000bca:	f7ff ff61 	bl	8000a90 <__retarget_lock_acquire_recursive>
 8000bce:	89ab      	ldrh	r3, [r5, #12]
 8000bd0:	071b      	lsls	r3, r3, #28
 8000bd2:	d501      	bpl.n	8000bd8 <_vfiprintf_r+0x3c>
 8000bd4:	692b      	ldr	r3, [r5, #16]
 8000bd6:	b9eb      	cbnz	r3, 8000c14 <_vfiprintf_r+0x78>
 8000bd8:	4629      	mov	r1, r5
 8000bda:	4630      	mov	r0, r6
 8000bdc:	f000 fb5a 	bl	8001294 <__swsetup_r>
 8000be0:	b1c0      	cbz	r0, 8000c14 <_vfiprintf_r+0x78>
 8000be2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000be4:	07dc      	lsls	r4, r3, #31
 8000be6:	d50e      	bpl.n	8000c06 <_vfiprintf_r+0x6a>
 8000be8:	f04f 30ff 	mov.w	r0, #4294967295
 8000bec:	b01d      	add	sp, #116	; 0x74
 8000bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000bf2:	4b7b      	ldr	r3, [pc, #492]	; (8000de0 <_vfiprintf_r+0x244>)
 8000bf4:	429d      	cmp	r5, r3
 8000bf6:	d101      	bne.n	8000bfc <_vfiprintf_r+0x60>
 8000bf8:	68b5      	ldr	r5, [r6, #8]
 8000bfa:	e7df      	b.n	8000bbc <_vfiprintf_r+0x20>
 8000bfc:	4b79      	ldr	r3, [pc, #484]	; (8000de4 <_vfiprintf_r+0x248>)
 8000bfe:	429d      	cmp	r5, r3
 8000c00:	bf08      	it	eq
 8000c02:	68f5      	ldreq	r5, [r6, #12]
 8000c04:	e7da      	b.n	8000bbc <_vfiprintf_r+0x20>
 8000c06:	89ab      	ldrh	r3, [r5, #12]
 8000c08:	0598      	lsls	r0, r3, #22
 8000c0a:	d4ed      	bmi.n	8000be8 <_vfiprintf_r+0x4c>
 8000c0c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c0e:	f7ff ff40 	bl	8000a92 <__retarget_lock_release_recursive>
 8000c12:	e7e9      	b.n	8000be8 <_vfiprintf_r+0x4c>
 8000c14:	2300      	movs	r3, #0
 8000c16:	9309      	str	r3, [sp, #36]	; 0x24
 8000c18:	2320      	movs	r3, #32
 8000c1a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000c1e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000c22:	2330      	movs	r3, #48	; 0x30
 8000c24:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000de8 <_vfiprintf_r+0x24c>
 8000c28:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000c2c:	f04f 0901 	mov.w	r9, #1
 8000c30:	4623      	mov	r3, r4
 8000c32:	469a      	mov	sl, r3
 8000c34:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000c38:	b10a      	cbz	r2, 8000c3e <_vfiprintf_r+0xa2>
 8000c3a:	2a25      	cmp	r2, #37	; 0x25
 8000c3c:	d1f9      	bne.n	8000c32 <_vfiprintf_r+0x96>
 8000c3e:	ebba 0b04 	subs.w	fp, sl, r4
 8000c42:	d00b      	beq.n	8000c5c <_vfiprintf_r+0xc0>
 8000c44:	465b      	mov	r3, fp
 8000c46:	4622      	mov	r2, r4
 8000c48:	4629      	mov	r1, r5
 8000c4a:	4630      	mov	r0, r6
 8000c4c:	f7ff ff93 	bl	8000b76 <__sfputs_r>
 8000c50:	3001      	adds	r0, #1
 8000c52:	f000 80aa 	beq.w	8000daa <_vfiprintf_r+0x20e>
 8000c56:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000c58:	445a      	add	r2, fp
 8000c5a:	9209      	str	r2, [sp, #36]	; 0x24
 8000c5c:	f89a 3000 	ldrb.w	r3, [sl]
 8000c60:	2b00      	cmp	r3, #0
 8000c62:	f000 80a2 	beq.w	8000daa <_vfiprintf_r+0x20e>
 8000c66:	2300      	movs	r3, #0
 8000c68:	f04f 32ff 	mov.w	r2, #4294967295
 8000c6c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000c70:	f10a 0a01 	add.w	sl, sl, #1
 8000c74:	9304      	str	r3, [sp, #16]
 8000c76:	9307      	str	r3, [sp, #28]
 8000c78:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000c7c:	931a      	str	r3, [sp, #104]	; 0x68
 8000c7e:	4654      	mov	r4, sl
 8000c80:	2205      	movs	r2, #5
 8000c82:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c86:	4858      	ldr	r0, [pc, #352]	; (8000de8 <_vfiprintf_r+0x24c>)
 8000c88:	f7ff fab2 	bl	80001f0 <memchr>
 8000c8c:	9a04      	ldr	r2, [sp, #16]
 8000c8e:	b9d8      	cbnz	r0, 8000cc8 <_vfiprintf_r+0x12c>
 8000c90:	06d1      	lsls	r1, r2, #27
 8000c92:	bf44      	itt	mi
 8000c94:	2320      	movmi	r3, #32
 8000c96:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000c9a:	0713      	lsls	r3, r2, #28
 8000c9c:	bf44      	itt	mi
 8000c9e:	232b      	movmi	r3, #43	; 0x2b
 8000ca0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ca4:	f89a 3000 	ldrb.w	r3, [sl]
 8000ca8:	2b2a      	cmp	r3, #42	; 0x2a
 8000caa:	d015      	beq.n	8000cd8 <_vfiprintf_r+0x13c>
 8000cac:	9a07      	ldr	r2, [sp, #28]
 8000cae:	4654      	mov	r4, sl
 8000cb0:	2000      	movs	r0, #0
 8000cb2:	f04f 0c0a 	mov.w	ip, #10
 8000cb6:	4621      	mov	r1, r4
 8000cb8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000cbc:	3b30      	subs	r3, #48	; 0x30
 8000cbe:	2b09      	cmp	r3, #9
 8000cc0:	d94e      	bls.n	8000d60 <_vfiprintf_r+0x1c4>
 8000cc2:	b1b0      	cbz	r0, 8000cf2 <_vfiprintf_r+0x156>
 8000cc4:	9207      	str	r2, [sp, #28]
 8000cc6:	e014      	b.n	8000cf2 <_vfiprintf_r+0x156>
 8000cc8:	eba0 0308 	sub.w	r3, r0, r8
 8000ccc:	fa09 f303 	lsl.w	r3, r9, r3
 8000cd0:	4313      	orrs	r3, r2
 8000cd2:	9304      	str	r3, [sp, #16]
 8000cd4:	46a2      	mov	sl, r4
 8000cd6:	e7d2      	b.n	8000c7e <_vfiprintf_r+0xe2>
 8000cd8:	9b03      	ldr	r3, [sp, #12]
 8000cda:	1d19      	adds	r1, r3, #4
 8000cdc:	681b      	ldr	r3, [r3, #0]
 8000cde:	9103      	str	r1, [sp, #12]
 8000ce0:	2b00      	cmp	r3, #0
 8000ce2:	bfbb      	ittet	lt
 8000ce4:	425b      	neglt	r3, r3
 8000ce6:	f042 0202 	orrlt.w	r2, r2, #2
 8000cea:	9307      	strge	r3, [sp, #28]
 8000cec:	9307      	strlt	r3, [sp, #28]
 8000cee:	bfb8      	it	lt
 8000cf0:	9204      	strlt	r2, [sp, #16]
 8000cf2:	7823      	ldrb	r3, [r4, #0]
 8000cf4:	2b2e      	cmp	r3, #46	; 0x2e
 8000cf6:	d10c      	bne.n	8000d12 <_vfiprintf_r+0x176>
 8000cf8:	7863      	ldrb	r3, [r4, #1]
 8000cfa:	2b2a      	cmp	r3, #42	; 0x2a
 8000cfc:	d135      	bne.n	8000d6a <_vfiprintf_r+0x1ce>
 8000cfe:	9b03      	ldr	r3, [sp, #12]
 8000d00:	1d1a      	adds	r2, r3, #4
 8000d02:	681b      	ldr	r3, [r3, #0]
 8000d04:	9203      	str	r2, [sp, #12]
 8000d06:	2b00      	cmp	r3, #0
 8000d08:	bfb8      	it	lt
 8000d0a:	f04f 33ff 	movlt.w	r3, #4294967295
 8000d0e:	3402      	adds	r4, #2
 8000d10:	9305      	str	r3, [sp, #20]
 8000d12:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000df8 <_vfiprintf_r+0x25c>
 8000d16:	7821      	ldrb	r1, [r4, #0]
 8000d18:	2203      	movs	r2, #3
 8000d1a:	4650      	mov	r0, sl
 8000d1c:	f7ff fa68 	bl	80001f0 <memchr>
 8000d20:	b140      	cbz	r0, 8000d34 <_vfiprintf_r+0x198>
 8000d22:	2340      	movs	r3, #64	; 0x40
 8000d24:	eba0 000a 	sub.w	r0, r0, sl
 8000d28:	fa03 f000 	lsl.w	r0, r3, r0
 8000d2c:	9b04      	ldr	r3, [sp, #16]
 8000d2e:	4303      	orrs	r3, r0
 8000d30:	3401      	adds	r4, #1
 8000d32:	9304      	str	r3, [sp, #16]
 8000d34:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d38:	482c      	ldr	r0, [pc, #176]	; (8000dec <_vfiprintf_r+0x250>)
 8000d3a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000d3e:	2206      	movs	r2, #6
 8000d40:	f7ff fa56 	bl	80001f0 <memchr>
 8000d44:	2800      	cmp	r0, #0
 8000d46:	d03f      	beq.n	8000dc8 <_vfiprintf_r+0x22c>
 8000d48:	4b29      	ldr	r3, [pc, #164]	; (8000df0 <_vfiprintf_r+0x254>)
 8000d4a:	bb1b      	cbnz	r3, 8000d94 <_vfiprintf_r+0x1f8>
 8000d4c:	9b03      	ldr	r3, [sp, #12]
 8000d4e:	3307      	adds	r3, #7
 8000d50:	f023 0307 	bic.w	r3, r3, #7
 8000d54:	3308      	adds	r3, #8
 8000d56:	9303      	str	r3, [sp, #12]
 8000d58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000d5a:	443b      	add	r3, r7
 8000d5c:	9309      	str	r3, [sp, #36]	; 0x24
 8000d5e:	e767      	b.n	8000c30 <_vfiprintf_r+0x94>
 8000d60:	fb0c 3202 	mla	r2, ip, r2, r3
 8000d64:	460c      	mov	r4, r1
 8000d66:	2001      	movs	r0, #1
 8000d68:	e7a5      	b.n	8000cb6 <_vfiprintf_r+0x11a>
 8000d6a:	2300      	movs	r3, #0
 8000d6c:	3401      	adds	r4, #1
 8000d6e:	9305      	str	r3, [sp, #20]
 8000d70:	4619      	mov	r1, r3
 8000d72:	f04f 0c0a 	mov.w	ip, #10
 8000d76:	4620      	mov	r0, r4
 8000d78:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000d7c:	3a30      	subs	r2, #48	; 0x30
 8000d7e:	2a09      	cmp	r2, #9
 8000d80:	d903      	bls.n	8000d8a <_vfiprintf_r+0x1ee>
 8000d82:	2b00      	cmp	r3, #0
 8000d84:	d0c5      	beq.n	8000d12 <_vfiprintf_r+0x176>
 8000d86:	9105      	str	r1, [sp, #20]
 8000d88:	e7c3      	b.n	8000d12 <_vfiprintf_r+0x176>
 8000d8a:	fb0c 2101 	mla	r1, ip, r1, r2
 8000d8e:	4604      	mov	r4, r0
 8000d90:	2301      	movs	r3, #1
 8000d92:	e7f0      	b.n	8000d76 <_vfiprintf_r+0x1da>
 8000d94:	ab03      	add	r3, sp, #12
 8000d96:	9300      	str	r3, [sp, #0]
 8000d98:	462a      	mov	r2, r5
 8000d9a:	4b16      	ldr	r3, [pc, #88]	; (8000df4 <_vfiprintf_r+0x258>)
 8000d9c:	a904      	add	r1, sp, #16
 8000d9e:	4630      	mov	r0, r6
 8000da0:	f3af 8000 	nop.w
 8000da4:	4607      	mov	r7, r0
 8000da6:	1c78      	adds	r0, r7, #1
 8000da8:	d1d6      	bne.n	8000d58 <_vfiprintf_r+0x1bc>
 8000daa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000dac:	07d9      	lsls	r1, r3, #31
 8000dae:	d405      	bmi.n	8000dbc <_vfiprintf_r+0x220>
 8000db0:	89ab      	ldrh	r3, [r5, #12]
 8000db2:	059a      	lsls	r2, r3, #22
 8000db4:	d402      	bmi.n	8000dbc <_vfiprintf_r+0x220>
 8000db6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000db8:	f7ff fe6b 	bl	8000a92 <__retarget_lock_release_recursive>
 8000dbc:	89ab      	ldrh	r3, [r5, #12]
 8000dbe:	065b      	lsls	r3, r3, #25
 8000dc0:	f53f af12 	bmi.w	8000be8 <_vfiprintf_r+0x4c>
 8000dc4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000dc6:	e711      	b.n	8000bec <_vfiprintf_r+0x50>
 8000dc8:	ab03      	add	r3, sp, #12
 8000dca:	9300      	str	r3, [sp, #0]
 8000dcc:	462a      	mov	r2, r5
 8000dce:	4b09      	ldr	r3, [pc, #36]	; (8000df4 <_vfiprintf_r+0x258>)
 8000dd0:	a904      	add	r1, sp, #16
 8000dd2:	4630      	mov	r0, r6
 8000dd4:	f000 f880 	bl	8000ed8 <_printf_i>
 8000dd8:	e7e4      	b.n	8000da4 <_vfiprintf_r+0x208>
 8000dda:	bf00      	nop
 8000ddc:	08001cb8 	.word	0x08001cb8
 8000de0:	08001cd8 	.word	0x08001cd8
 8000de4:	08001c98 	.word	0x08001c98
 8000de8:	08001cf8 	.word	0x08001cf8
 8000dec:	08001d02 	.word	0x08001d02
 8000df0:	00000000 	.word	0x00000000
 8000df4:	08000b77 	.word	0x08000b77
 8000df8:	08001cfe 	.word	0x08001cfe

08000dfc <_printf_common>:
 8000dfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e00:	4616      	mov	r6, r2
 8000e02:	4699      	mov	r9, r3
 8000e04:	688a      	ldr	r2, [r1, #8]
 8000e06:	690b      	ldr	r3, [r1, #16]
 8000e08:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000e0c:	4293      	cmp	r3, r2
 8000e0e:	bfb8      	it	lt
 8000e10:	4613      	movlt	r3, r2
 8000e12:	6033      	str	r3, [r6, #0]
 8000e14:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000e18:	4607      	mov	r7, r0
 8000e1a:	460c      	mov	r4, r1
 8000e1c:	b10a      	cbz	r2, 8000e22 <_printf_common+0x26>
 8000e1e:	3301      	adds	r3, #1
 8000e20:	6033      	str	r3, [r6, #0]
 8000e22:	6823      	ldr	r3, [r4, #0]
 8000e24:	0699      	lsls	r1, r3, #26
 8000e26:	bf42      	ittt	mi
 8000e28:	6833      	ldrmi	r3, [r6, #0]
 8000e2a:	3302      	addmi	r3, #2
 8000e2c:	6033      	strmi	r3, [r6, #0]
 8000e2e:	6825      	ldr	r5, [r4, #0]
 8000e30:	f015 0506 	ands.w	r5, r5, #6
 8000e34:	d106      	bne.n	8000e44 <_printf_common+0x48>
 8000e36:	f104 0a19 	add.w	sl, r4, #25
 8000e3a:	68e3      	ldr	r3, [r4, #12]
 8000e3c:	6832      	ldr	r2, [r6, #0]
 8000e3e:	1a9b      	subs	r3, r3, r2
 8000e40:	42ab      	cmp	r3, r5
 8000e42:	dc26      	bgt.n	8000e92 <_printf_common+0x96>
 8000e44:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000e48:	1e13      	subs	r3, r2, #0
 8000e4a:	6822      	ldr	r2, [r4, #0]
 8000e4c:	bf18      	it	ne
 8000e4e:	2301      	movne	r3, #1
 8000e50:	0692      	lsls	r2, r2, #26
 8000e52:	d42b      	bmi.n	8000eac <_printf_common+0xb0>
 8000e54:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000e58:	4649      	mov	r1, r9
 8000e5a:	4638      	mov	r0, r7
 8000e5c:	47c0      	blx	r8
 8000e5e:	3001      	adds	r0, #1
 8000e60:	d01e      	beq.n	8000ea0 <_printf_common+0xa4>
 8000e62:	6823      	ldr	r3, [r4, #0]
 8000e64:	68e5      	ldr	r5, [r4, #12]
 8000e66:	6832      	ldr	r2, [r6, #0]
 8000e68:	f003 0306 	and.w	r3, r3, #6
 8000e6c:	2b04      	cmp	r3, #4
 8000e6e:	bf08      	it	eq
 8000e70:	1aad      	subeq	r5, r5, r2
 8000e72:	68a3      	ldr	r3, [r4, #8]
 8000e74:	6922      	ldr	r2, [r4, #16]
 8000e76:	bf0c      	ite	eq
 8000e78:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000e7c:	2500      	movne	r5, #0
 8000e7e:	4293      	cmp	r3, r2
 8000e80:	bfc4      	itt	gt
 8000e82:	1a9b      	subgt	r3, r3, r2
 8000e84:	18ed      	addgt	r5, r5, r3
 8000e86:	2600      	movs	r6, #0
 8000e88:	341a      	adds	r4, #26
 8000e8a:	42b5      	cmp	r5, r6
 8000e8c:	d11a      	bne.n	8000ec4 <_printf_common+0xc8>
 8000e8e:	2000      	movs	r0, #0
 8000e90:	e008      	b.n	8000ea4 <_printf_common+0xa8>
 8000e92:	2301      	movs	r3, #1
 8000e94:	4652      	mov	r2, sl
 8000e96:	4649      	mov	r1, r9
 8000e98:	4638      	mov	r0, r7
 8000e9a:	47c0      	blx	r8
 8000e9c:	3001      	adds	r0, #1
 8000e9e:	d103      	bne.n	8000ea8 <_printf_common+0xac>
 8000ea0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ea4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ea8:	3501      	adds	r5, #1
 8000eaa:	e7c6      	b.n	8000e3a <_printf_common+0x3e>
 8000eac:	18e1      	adds	r1, r4, r3
 8000eae:	1c5a      	adds	r2, r3, #1
 8000eb0:	2030      	movs	r0, #48	; 0x30
 8000eb2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000eb6:	4422      	add	r2, r4
 8000eb8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000ebc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000ec0:	3302      	adds	r3, #2
 8000ec2:	e7c7      	b.n	8000e54 <_printf_common+0x58>
 8000ec4:	2301      	movs	r3, #1
 8000ec6:	4622      	mov	r2, r4
 8000ec8:	4649      	mov	r1, r9
 8000eca:	4638      	mov	r0, r7
 8000ecc:	47c0      	blx	r8
 8000ece:	3001      	adds	r0, #1
 8000ed0:	d0e6      	beq.n	8000ea0 <_printf_common+0xa4>
 8000ed2:	3601      	adds	r6, #1
 8000ed4:	e7d9      	b.n	8000e8a <_printf_common+0x8e>
	...

08000ed8 <_printf_i>:
 8000ed8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000edc:	460c      	mov	r4, r1
 8000ede:	4691      	mov	r9, r2
 8000ee0:	7e27      	ldrb	r7, [r4, #24]
 8000ee2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000ee4:	2f78      	cmp	r7, #120	; 0x78
 8000ee6:	4680      	mov	r8, r0
 8000ee8:	469a      	mov	sl, r3
 8000eea:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000eee:	d807      	bhi.n	8000f00 <_printf_i+0x28>
 8000ef0:	2f62      	cmp	r7, #98	; 0x62
 8000ef2:	d80a      	bhi.n	8000f0a <_printf_i+0x32>
 8000ef4:	2f00      	cmp	r7, #0
 8000ef6:	f000 80d8 	beq.w	80010aa <_printf_i+0x1d2>
 8000efa:	2f58      	cmp	r7, #88	; 0x58
 8000efc:	f000 80a3 	beq.w	8001046 <_printf_i+0x16e>
 8000f00:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000f04:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000f08:	e03a      	b.n	8000f80 <_printf_i+0xa8>
 8000f0a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000f0e:	2b15      	cmp	r3, #21
 8000f10:	d8f6      	bhi.n	8000f00 <_printf_i+0x28>
 8000f12:	a001      	add	r0, pc, #4	; (adr r0, 8000f18 <_printf_i+0x40>)
 8000f14:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000f18:	08000f71 	.word	0x08000f71
 8000f1c:	08000f85 	.word	0x08000f85
 8000f20:	08000f01 	.word	0x08000f01
 8000f24:	08000f01 	.word	0x08000f01
 8000f28:	08000f01 	.word	0x08000f01
 8000f2c:	08000f01 	.word	0x08000f01
 8000f30:	08000f85 	.word	0x08000f85
 8000f34:	08000f01 	.word	0x08000f01
 8000f38:	08000f01 	.word	0x08000f01
 8000f3c:	08000f01 	.word	0x08000f01
 8000f40:	08000f01 	.word	0x08000f01
 8000f44:	08001091 	.word	0x08001091
 8000f48:	08000fb5 	.word	0x08000fb5
 8000f4c:	08001073 	.word	0x08001073
 8000f50:	08000f01 	.word	0x08000f01
 8000f54:	08000f01 	.word	0x08000f01
 8000f58:	080010b3 	.word	0x080010b3
 8000f5c:	08000f01 	.word	0x08000f01
 8000f60:	08000fb5 	.word	0x08000fb5
 8000f64:	08000f01 	.word	0x08000f01
 8000f68:	08000f01 	.word	0x08000f01
 8000f6c:	0800107b 	.word	0x0800107b
 8000f70:	680b      	ldr	r3, [r1, #0]
 8000f72:	1d1a      	adds	r2, r3, #4
 8000f74:	681b      	ldr	r3, [r3, #0]
 8000f76:	600a      	str	r2, [r1, #0]
 8000f78:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000f7c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000f80:	2301      	movs	r3, #1
 8000f82:	e0a3      	b.n	80010cc <_printf_i+0x1f4>
 8000f84:	6825      	ldr	r5, [r4, #0]
 8000f86:	6808      	ldr	r0, [r1, #0]
 8000f88:	062e      	lsls	r6, r5, #24
 8000f8a:	f100 0304 	add.w	r3, r0, #4
 8000f8e:	d50a      	bpl.n	8000fa6 <_printf_i+0xce>
 8000f90:	6805      	ldr	r5, [r0, #0]
 8000f92:	600b      	str	r3, [r1, #0]
 8000f94:	2d00      	cmp	r5, #0
 8000f96:	da03      	bge.n	8000fa0 <_printf_i+0xc8>
 8000f98:	232d      	movs	r3, #45	; 0x2d
 8000f9a:	426d      	negs	r5, r5
 8000f9c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000fa0:	485e      	ldr	r0, [pc, #376]	; (800111c <_printf_i+0x244>)
 8000fa2:	230a      	movs	r3, #10
 8000fa4:	e019      	b.n	8000fda <_printf_i+0x102>
 8000fa6:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000faa:	6805      	ldr	r5, [r0, #0]
 8000fac:	600b      	str	r3, [r1, #0]
 8000fae:	bf18      	it	ne
 8000fb0:	b22d      	sxthne	r5, r5
 8000fb2:	e7ef      	b.n	8000f94 <_printf_i+0xbc>
 8000fb4:	680b      	ldr	r3, [r1, #0]
 8000fb6:	6825      	ldr	r5, [r4, #0]
 8000fb8:	1d18      	adds	r0, r3, #4
 8000fba:	6008      	str	r0, [r1, #0]
 8000fbc:	0628      	lsls	r0, r5, #24
 8000fbe:	d501      	bpl.n	8000fc4 <_printf_i+0xec>
 8000fc0:	681d      	ldr	r5, [r3, #0]
 8000fc2:	e002      	b.n	8000fca <_printf_i+0xf2>
 8000fc4:	0669      	lsls	r1, r5, #25
 8000fc6:	d5fb      	bpl.n	8000fc0 <_printf_i+0xe8>
 8000fc8:	881d      	ldrh	r5, [r3, #0]
 8000fca:	4854      	ldr	r0, [pc, #336]	; (800111c <_printf_i+0x244>)
 8000fcc:	2f6f      	cmp	r7, #111	; 0x6f
 8000fce:	bf0c      	ite	eq
 8000fd0:	2308      	moveq	r3, #8
 8000fd2:	230a      	movne	r3, #10
 8000fd4:	2100      	movs	r1, #0
 8000fd6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000fda:	6866      	ldr	r6, [r4, #4]
 8000fdc:	60a6      	str	r6, [r4, #8]
 8000fde:	2e00      	cmp	r6, #0
 8000fe0:	bfa2      	ittt	ge
 8000fe2:	6821      	ldrge	r1, [r4, #0]
 8000fe4:	f021 0104 	bicge.w	r1, r1, #4
 8000fe8:	6021      	strge	r1, [r4, #0]
 8000fea:	b90d      	cbnz	r5, 8000ff0 <_printf_i+0x118>
 8000fec:	2e00      	cmp	r6, #0
 8000fee:	d04d      	beq.n	800108c <_printf_i+0x1b4>
 8000ff0:	4616      	mov	r6, r2
 8000ff2:	fbb5 f1f3 	udiv	r1, r5, r3
 8000ff6:	fb03 5711 	mls	r7, r3, r1, r5
 8000ffa:	5dc7      	ldrb	r7, [r0, r7]
 8000ffc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001000:	462f      	mov	r7, r5
 8001002:	42bb      	cmp	r3, r7
 8001004:	460d      	mov	r5, r1
 8001006:	d9f4      	bls.n	8000ff2 <_printf_i+0x11a>
 8001008:	2b08      	cmp	r3, #8
 800100a:	d10b      	bne.n	8001024 <_printf_i+0x14c>
 800100c:	6823      	ldr	r3, [r4, #0]
 800100e:	07df      	lsls	r7, r3, #31
 8001010:	d508      	bpl.n	8001024 <_printf_i+0x14c>
 8001012:	6923      	ldr	r3, [r4, #16]
 8001014:	6861      	ldr	r1, [r4, #4]
 8001016:	4299      	cmp	r1, r3
 8001018:	bfde      	ittt	le
 800101a:	2330      	movle	r3, #48	; 0x30
 800101c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001020:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001024:	1b92      	subs	r2, r2, r6
 8001026:	6122      	str	r2, [r4, #16]
 8001028:	f8cd a000 	str.w	sl, [sp]
 800102c:	464b      	mov	r3, r9
 800102e:	aa03      	add	r2, sp, #12
 8001030:	4621      	mov	r1, r4
 8001032:	4640      	mov	r0, r8
 8001034:	f7ff fee2 	bl	8000dfc <_printf_common>
 8001038:	3001      	adds	r0, #1
 800103a:	d14c      	bne.n	80010d6 <_printf_i+0x1fe>
 800103c:	f04f 30ff 	mov.w	r0, #4294967295
 8001040:	b004      	add	sp, #16
 8001042:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001046:	4835      	ldr	r0, [pc, #212]	; (800111c <_printf_i+0x244>)
 8001048:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800104c:	6823      	ldr	r3, [r4, #0]
 800104e:	680e      	ldr	r6, [r1, #0]
 8001050:	061f      	lsls	r7, r3, #24
 8001052:	f856 5b04 	ldr.w	r5, [r6], #4
 8001056:	600e      	str	r6, [r1, #0]
 8001058:	d514      	bpl.n	8001084 <_printf_i+0x1ac>
 800105a:	07d9      	lsls	r1, r3, #31
 800105c:	bf44      	itt	mi
 800105e:	f043 0320 	orrmi.w	r3, r3, #32
 8001062:	6023      	strmi	r3, [r4, #0]
 8001064:	b91d      	cbnz	r5, 800106e <_printf_i+0x196>
 8001066:	6823      	ldr	r3, [r4, #0]
 8001068:	f023 0320 	bic.w	r3, r3, #32
 800106c:	6023      	str	r3, [r4, #0]
 800106e:	2310      	movs	r3, #16
 8001070:	e7b0      	b.n	8000fd4 <_printf_i+0xfc>
 8001072:	6823      	ldr	r3, [r4, #0]
 8001074:	f043 0320 	orr.w	r3, r3, #32
 8001078:	6023      	str	r3, [r4, #0]
 800107a:	2378      	movs	r3, #120	; 0x78
 800107c:	4828      	ldr	r0, [pc, #160]	; (8001120 <_printf_i+0x248>)
 800107e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001082:	e7e3      	b.n	800104c <_printf_i+0x174>
 8001084:	065e      	lsls	r6, r3, #25
 8001086:	bf48      	it	mi
 8001088:	b2ad      	uxthmi	r5, r5
 800108a:	e7e6      	b.n	800105a <_printf_i+0x182>
 800108c:	4616      	mov	r6, r2
 800108e:	e7bb      	b.n	8001008 <_printf_i+0x130>
 8001090:	680b      	ldr	r3, [r1, #0]
 8001092:	6826      	ldr	r6, [r4, #0]
 8001094:	6960      	ldr	r0, [r4, #20]
 8001096:	1d1d      	adds	r5, r3, #4
 8001098:	600d      	str	r5, [r1, #0]
 800109a:	0635      	lsls	r5, r6, #24
 800109c:	681b      	ldr	r3, [r3, #0]
 800109e:	d501      	bpl.n	80010a4 <_printf_i+0x1cc>
 80010a0:	6018      	str	r0, [r3, #0]
 80010a2:	e002      	b.n	80010aa <_printf_i+0x1d2>
 80010a4:	0671      	lsls	r1, r6, #25
 80010a6:	d5fb      	bpl.n	80010a0 <_printf_i+0x1c8>
 80010a8:	8018      	strh	r0, [r3, #0]
 80010aa:	2300      	movs	r3, #0
 80010ac:	6123      	str	r3, [r4, #16]
 80010ae:	4616      	mov	r6, r2
 80010b0:	e7ba      	b.n	8001028 <_printf_i+0x150>
 80010b2:	680b      	ldr	r3, [r1, #0]
 80010b4:	1d1a      	adds	r2, r3, #4
 80010b6:	600a      	str	r2, [r1, #0]
 80010b8:	681e      	ldr	r6, [r3, #0]
 80010ba:	6862      	ldr	r2, [r4, #4]
 80010bc:	2100      	movs	r1, #0
 80010be:	4630      	mov	r0, r6
 80010c0:	f7ff f896 	bl	80001f0 <memchr>
 80010c4:	b108      	cbz	r0, 80010ca <_printf_i+0x1f2>
 80010c6:	1b80      	subs	r0, r0, r6
 80010c8:	6060      	str	r0, [r4, #4]
 80010ca:	6863      	ldr	r3, [r4, #4]
 80010cc:	6123      	str	r3, [r4, #16]
 80010ce:	2300      	movs	r3, #0
 80010d0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80010d4:	e7a8      	b.n	8001028 <_printf_i+0x150>
 80010d6:	6923      	ldr	r3, [r4, #16]
 80010d8:	4632      	mov	r2, r6
 80010da:	4649      	mov	r1, r9
 80010dc:	4640      	mov	r0, r8
 80010de:	47d0      	blx	sl
 80010e0:	3001      	adds	r0, #1
 80010e2:	d0ab      	beq.n	800103c <_printf_i+0x164>
 80010e4:	6823      	ldr	r3, [r4, #0]
 80010e6:	079b      	lsls	r3, r3, #30
 80010e8:	d413      	bmi.n	8001112 <_printf_i+0x23a>
 80010ea:	68e0      	ldr	r0, [r4, #12]
 80010ec:	9b03      	ldr	r3, [sp, #12]
 80010ee:	4298      	cmp	r0, r3
 80010f0:	bfb8      	it	lt
 80010f2:	4618      	movlt	r0, r3
 80010f4:	e7a4      	b.n	8001040 <_printf_i+0x168>
 80010f6:	2301      	movs	r3, #1
 80010f8:	4632      	mov	r2, r6
 80010fa:	4649      	mov	r1, r9
 80010fc:	4640      	mov	r0, r8
 80010fe:	47d0      	blx	sl
 8001100:	3001      	adds	r0, #1
 8001102:	d09b      	beq.n	800103c <_printf_i+0x164>
 8001104:	3501      	adds	r5, #1
 8001106:	68e3      	ldr	r3, [r4, #12]
 8001108:	9903      	ldr	r1, [sp, #12]
 800110a:	1a5b      	subs	r3, r3, r1
 800110c:	42ab      	cmp	r3, r5
 800110e:	dcf2      	bgt.n	80010f6 <_printf_i+0x21e>
 8001110:	e7eb      	b.n	80010ea <_printf_i+0x212>
 8001112:	2500      	movs	r5, #0
 8001114:	f104 0619 	add.w	r6, r4, #25
 8001118:	e7f5      	b.n	8001106 <_printf_i+0x22e>
 800111a:	bf00      	nop
 800111c:	08001d09 	.word	0x08001d09
 8001120:	08001d1a 	.word	0x08001d1a

08001124 <_sbrk_r>:
 8001124:	b538      	push	{r3, r4, r5, lr}
 8001126:	4d06      	ldr	r5, [pc, #24]	; (8001140 <_sbrk_r+0x1c>)
 8001128:	2300      	movs	r3, #0
 800112a:	4604      	mov	r4, r0
 800112c:	4608      	mov	r0, r1
 800112e:	602b      	str	r3, [r5, #0]
 8001130:	f7ff fb0e 	bl	8000750 <_sbrk>
 8001134:	1c43      	adds	r3, r0, #1
 8001136:	d102      	bne.n	800113e <_sbrk_r+0x1a>
 8001138:	682b      	ldr	r3, [r5, #0]
 800113a:	b103      	cbz	r3, 800113e <_sbrk_r+0x1a>
 800113c:	6023      	str	r3, [r4, #0]
 800113e:	bd38      	pop	{r3, r4, r5, pc}
 8001140:	2000014c 	.word	0x2000014c

08001144 <__sread>:
 8001144:	b510      	push	{r4, lr}
 8001146:	460c      	mov	r4, r1
 8001148:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800114c:	f000 fab4 	bl	80016b8 <_read_r>
 8001150:	2800      	cmp	r0, #0
 8001152:	bfab      	itete	ge
 8001154:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001156:	89a3      	ldrhlt	r3, [r4, #12]
 8001158:	181b      	addge	r3, r3, r0
 800115a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800115e:	bfac      	ite	ge
 8001160:	6563      	strge	r3, [r4, #84]	; 0x54
 8001162:	81a3      	strhlt	r3, [r4, #12]
 8001164:	bd10      	pop	{r4, pc}

08001166 <__swrite>:
 8001166:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800116a:	461f      	mov	r7, r3
 800116c:	898b      	ldrh	r3, [r1, #12]
 800116e:	05db      	lsls	r3, r3, #23
 8001170:	4605      	mov	r5, r0
 8001172:	460c      	mov	r4, r1
 8001174:	4616      	mov	r6, r2
 8001176:	d505      	bpl.n	8001184 <__swrite+0x1e>
 8001178:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800117c:	2302      	movs	r3, #2
 800117e:	2200      	movs	r2, #0
 8001180:	f000 f9c8 	bl	8001514 <_lseek_r>
 8001184:	89a3      	ldrh	r3, [r4, #12]
 8001186:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800118a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800118e:	81a3      	strh	r3, [r4, #12]
 8001190:	4632      	mov	r2, r6
 8001192:	463b      	mov	r3, r7
 8001194:	4628      	mov	r0, r5
 8001196:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800119a:	f000 b869 	b.w	8001270 <_write_r>

0800119e <__sseek>:
 800119e:	b510      	push	{r4, lr}
 80011a0:	460c      	mov	r4, r1
 80011a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011a6:	f000 f9b5 	bl	8001514 <_lseek_r>
 80011aa:	1c43      	adds	r3, r0, #1
 80011ac:	89a3      	ldrh	r3, [r4, #12]
 80011ae:	bf15      	itete	ne
 80011b0:	6560      	strne	r0, [r4, #84]	; 0x54
 80011b2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80011b6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80011ba:	81a3      	strheq	r3, [r4, #12]
 80011bc:	bf18      	it	ne
 80011be:	81a3      	strhne	r3, [r4, #12]
 80011c0:	bd10      	pop	{r4, pc}

080011c2 <__sclose>:
 80011c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011c6:	f000 b8d3 	b.w	8001370 <_close_r>
	...

080011cc <__swbuf_r>:
 80011cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011ce:	460e      	mov	r6, r1
 80011d0:	4614      	mov	r4, r2
 80011d2:	4605      	mov	r5, r0
 80011d4:	b118      	cbz	r0, 80011de <__swbuf_r+0x12>
 80011d6:	6983      	ldr	r3, [r0, #24]
 80011d8:	b90b      	cbnz	r3, 80011de <__swbuf_r+0x12>
 80011da:	f7ff fbbb 	bl	8000954 <__sinit>
 80011de:	4b21      	ldr	r3, [pc, #132]	; (8001264 <__swbuf_r+0x98>)
 80011e0:	429c      	cmp	r4, r3
 80011e2:	d12b      	bne.n	800123c <__swbuf_r+0x70>
 80011e4:	686c      	ldr	r4, [r5, #4]
 80011e6:	69a3      	ldr	r3, [r4, #24]
 80011e8:	60a3      	str	r3, [r4, #8]
 80011ea:	89a3      	ldrh	r3, [r4, #12]
 80011ec:	071a      	lsls	r2, r3, #28
 80011ee:	d52f      	bpl.n	8001250 <__swbuf_r+0x84>
 80011f0:	6923      	ldr	r3, [r4, #16]
 80011f2:	b36b      	cbz	r3, 8001250 <__swbuf_r+0x84>
 80011f4:	6923      	ldr	r3, [r4, #16]
 80011f6:	6820      	ldr	r0, [r4, #0]
 80011f8:	1ac0      	subs	r0, r0, r3
 80011fa:	6963      	ldr	r3, [r4, #20]
 80011fc:	b2f6      	uxtb	r6, r6
 80011fe:	4283      	cmp	r3, r0
 8001200:	4637      	mov	r7, r6
 8001202:	dc04      	bgt.n	800120e <__swbuf_r+0x42>
 8001204:	4621      	mov	r1, r4
 8001206:	4628      	mov	r0, r5
 8001208:	f000 f948 	bl	800149c <_fflush_r>
 800120c:	bb30      	cbnz	r0, 800125c <__swbuf_r+0x90>
 800120e:	68a3      	ldr	r3, [r4, #8]
 8001210:	3b01      	subs	r3, #1
 8001212:	60a3      	str	r3, [r4, #8]
 8001214:	6823      	ldr	r3, [r4, #0]
 8001216:	1c5a      	adds	r2, r3, #1
 8001218:	6022      	str	r2, [r4, #0]
 800121a:	701e      	strb	r6, [r3, #0]
 800121c:	6963      	ldr	r3, [r4, #20]
 800121e:	3001      	adds	r0, #1
 8001220:	4283      	cmp	r3, r0
 8001222:	d004      	beq.n	800122e <__swbuf_r+0x62>
 8001224:	89a3      	ldrh	r3, [r4, #12]
 8001226:	07db      	lsls	r3, r3, #31
 8001228:	d506      	bpl.n	8001238 <__swbuf_r+0x6c>
 800122a:	2e0a      	cmp	r6, #10
 800122c:	d104      	bne.n	8001238 <__swbuf_r+0x6c>
 800122e:	4621      	mov	r1, r4
 8001230:	4628      	mov	r0, r5
 8001232:	f000 f933 	bl	800149c <_fflush_r>
 8001236:	b988      	cbnz	r0, 800125c <__swbuf_r+0x90>
 8001238:	4638      	mov	r0, r7
 800123a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800123c:	4b0a      	ldr	r3, [pc, #40]	; (8001268 <__swbuf_r+0x9c>)
 800123e:	429c      	cmp	r4, r3
 8001240:	d101      	bne.n	8001246 <__swbuf_r+0x7a>
 8001242:	68ac      	ldr	r4, [r5, #8]
 8001244:	e7cf      	b.n	80011e6 <__swbuf_r+0x1a>
 8001246:	4b09      	ldr	r3, [pc, #36]	; (800126c <__swbuf_r+0xa0>)
 8001248:	429c      	cmp	r4, r3
 800124a:	bf08      	it	eq
 800124c:	68ec      	ldreq	r4, [r5, #12]
 800124e:	e7ca      	b.n	80011e6 <__swbuf_r+0x1a>
 8001250:	4621      	mov	r1, r4
 8001252:	4628      	mov	r0, r5
 8001254:	f000 f81e 	bl	8001294 <__swsetup_r>
 8001258:	2800      	cmp	r0, #0
 800125a:	d0cb      	beq.n	80011f4 <__swbuf_r+0x28>
 800125c:	f04f 37ff 	mov.w	r7, #4294967295
 8001260:	e7ea      	b.n	8001238 <__swbuf_r+0x6c>
 8001262:	bf00      	nop
 8001264:	08001cb8 	.word	0x08001cb8
 8001268:	08001cd8 	.word	0x08001cd8
 800126c:	08001c98 	.word	0x08001c98

08001270 <_write_r>:
 8001270:	b538      	push	{r3, r4, r5, lr}
 8001272:	4d07      	ldr	r5, [pc, #28]	; (8001290 <_write_r+0x20>)
 8001274:	4604      	mov	r4, r0
 8001276:	4608      	mov	r0, r1
 8001278:	4611      	mov	r1, r2
 800127a:	2200      	movs	r2, #0
 800127c:	602a      	str	r2, [r5, #0]
 800127e:	461a      	mov	r2, r3
 8001280:	f000 fb00 	bl	8001884 <_write>
 8001284:	1c43      	adds	r3, r0, #1
 8001286:	d102      	bne.n	800128e <_write_r+0x1e>
 8001288:	682b      	ldr	r3, [r5, #0]
 800128a:	b103      	cbz	r3, 800128e <_write_r+0x1e>
 800128c:	6023      	str	r3, [r4, #0]
 800128e:	bd38      	pop	{r3, r4, r5, pc}
 8001290:	2000014c 	.word	0x2000014c

08001294 <__swsetup_r>:
 8001294:	4b32      	ldr	r3, [pc, #200]	; (8001360 <__swsetup_r+0xcc>)
 8001296:	b570      	push	{r4, r5, r6, lr}
 8001298:	681d      	ldr	r5, [r3, #0]
 800129a:	4606      	mov	r6, r0
 800129c:	460c      	mov	r4, r1
 800129e:	b125      	cbz	r5, 80012aa <__swsetup_r+0x16>
 80012a0:	69ab      	ldr	r3, [r5, #24]
 80012a2:	b913      	cbnz	r3, 80012aa <__swsetup_r+0x16>
 80012a4:	4628      	mov	r0, r5
 80012a6:	f7ff fb55 	bl	8000954 <__sinit>
 80012aa:	4b2e      	ldr	r3, [pc, #184]	; (8001364 <__swsetup_r+0xd0>)
 80012ac:	429c      	cmp	r4, r3
 80012ae:	d10f      	bne.n	80012d0 <__swsetup_r+0x3c>
 80012b0:	686c      	ldr	r4, [r5, #4]
 80012b2:	89a3      	ldrh	r3, [r4, #12]
 80012b4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80012b8:	0719      	lsls	r1, r3, #28
 80012ba:	d42c      	bmi.n	8001316 <__swsetup_r+0x82>
 80012bc:	06dd      	lsls	r5, r3, #27
 80012be:	d411      	bmi.n	80012e4 <__swsetup_r+0x50>
 80012c0:	2309      	movs	r3, #9
 80012c2:	6033      	str	r3, [r6, #0]
 80012c4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80012c8:	81a3      	strh	r3, [r4, #12]
 80012ca:	f04f 30ff 	mov.w	r0, #4294967295
 80012ce:	e03e      	b.n	800134e <__swsetup_r+0xba>
 80012d0:	4b25      	ldr	r3, [pc, #148]	; (8001368 <__swsetup_r+0xd4>)
 80012d2:	429c      	cmp	r4, r3
 80012d4:	d101      	bne.n	80012da <__swsetup_r+0x46>
 80012d6:	68ac      	ldr	r4, [r5, #8]
 80012d8:	e7eb      	b.n	80012b2 <__swsetup_r+0x1e>
 80012da:	4b24      	ldr	r3, [pc, #144]	; (800136c <__swsetup_r+0xd8>)
 80012dc:	429c      	cmp	r4, r3
 80012de:	bf08      	it	eq
 80012e0:	68ec      	ldreq	r4, [r5, #12]
 80012e2:	e7e6      	b.n	80012b2 <__swsetup_r+0x1e>
 80012e4:	0758      	lsls	r0, r3, #29
 80012e6:	d512      	bpl.n	800130e <__swsetup_r+0x7a>
 80012e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80012ea:	b141      	cbz	r1, 80012fe <__swsetup_r+0x6a>
 80012ec:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80012f0:	4299      	cmp	r1, r3
 80012f2:	d002      	beq.n	80012fa <__swsetup_r+0x66>
 80012f4:	4630      	mov	r0, r6
 80012f6:	f000 f98f 	bl	8001618 <_free_r>
 80012fa:	2300      	movs	r3, #0
 80012fc:	6363      	str	r3, [r4, #52]	; 0x34
 80012fe:	89a3      	ldrh	r3, [r4, #12]
 8001300:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001304:	81a3      	strh	r3, [r4, #12]
 8001306:	2300      	movs	r3, #0
 8001308:	6063      	str	r3, [r4, #4]
 800130a:	6923      	ldr	r3, [r4, #16]
 800130c:	6023      	str	r3, [r4, #0]
 800130e:	89a3      	ldrh	r3, [r4, #12]
 8001310:	f043 0308 	orr.w	r3, r3, #8
 8001314:	81a3      	strh	r3, [r4, #12]
 8001316:	6923      	ldr	r3, [r4, #16]
 8001318:	b94b      	cbnz	r3, 800132e <__swsetup_r+0x9a>
 800131a:	89a3      	ldrh	r3, [r4, #12]
 800131c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001320:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001324:	d003      	beq.n	800132e <__swsetup_r+0x9a>
 8001326:	4621      	mov	r1, r4
 8001328:	4630      	mov	r0, r6
 800132a:	f000 f929 	bl	8001580 <__smakebuf_r>
 800132e:	89a0      	ldrh	r0, [r4, #12]
 8001330:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001334:	f010 0301 	ands.w	r3, r0, #1
 8001338:	d00a      	beq.n	8001350 <__swsetup_r+0xbc>
 800133a:	2300      	movs	r3, #0
 800133c:	60a3      	str	r3, [r4, #8]
 800133e:	6963      	ldr	r3, [r4, #20]
 8001340:	425b      	negs	r3, r3
 8001342:	61a3      	str	r3, [r4, #24]
 8001344:	6923      	ldr	r3, [r4, #16]
 8001346:	b943      	cbnz	r3, 800135a <__swsetup_r+0xc6>
 8001348:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800134c:	d1ba      	bne.n	80012c4 <__swsetup_r+0x30>
 800134e:	bd70      	pop	{r4, r5, r6, pc}
 8001350:	0781      	lsls	r1, r0, #30
 8001352:	bf58      	it	pl
 8001354:	6963      	ldrpl	r3, [r4, #20]
 8001356:	60a3      	str	r3, [r4, #8]
 8001358:	e7f4      	b.n	8001344 <__swsetup_r+0xb0>
 800135a:	2000      	movs	r0, #0
 800135c:	e7f7      	b.n	800134e <__swsetup_r+0xba>
 800135e:	bf00      	nop
 8001360:	20000000 	.word	0x20000000
 8001364:	08001cb8 	.word	0x08001cb8
 8001368:	08001cd8 	.word	0x08001cd8
 800136c:	08001c98 	.word	0x08001c98

08001370 <_close_r>:
 8001370:	b538      	push	{r3, r4, r5, lr}
 8001372:	4d06      	ldr	r5, [pc, #24]	; (800138c <_close_r+0x1c>)
 8001374:	2300      	movs	r3, #0
 8001376:	4604      	mov	r4, r0
 8001378:	4608      	mov	r0, r1
 800137a:	602b      	str	r3, [r5, #0]
 800137c:	f000 fab4 	bl	80018e8 <_close>
 8001380:	1c43      	adds	r3, r0, #1
 8001382:	d102      	bne.n	800138a <_close_r+0x1a>
 8001384:	682b      	ldr	r3, [r5, #0]
 8001386:	b103      	cbz	r3, 800138a <_close_r+0x1a>
 8001388:	6023      	str	r3, [r4, #0]
 800138a:	bd38      	pop	{r3, r4, r5, pc}
 800138c:	2000014c 	.word	0x2000014c

08001390 <__sflush_r>:
 8001390:	898a      	ldrh	r2, [r1, #12]
 8001392:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001396:	4605      	mov	r5, r0
 8001398:	0710      	lsls	r0, r2, #28
 800139a:	460c      	mov	r4, r1
 800139c:	d458      	bmi.n	8001450 <__sflush_r+0xc0>
 800139e:	684b      	ldr	r3, [r1, #4]
 80013a0:	2b00      	cmp	r3, #0
 80013a2:	dc05      	bgt.n	80013b0 <__sflush_r+0x20>
 80013a4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80013a6:	2b00      	cmp	r3, #0
 80013a8:	dc02      	bgt.n	80013b0 <__sflush_r+0x20>
 80013aa:	2000      	movs	r0, #0
 80013ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80013b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80013b2:	2e00      	cmp	r6, #0
 80013b4:	d0f9      	beq.n	80013aa <__sflush_r+0x1a>
 80013b6:	2300      	movs	r3, #0
 80013b8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80013bc:	682f      	ldr	r7, [r5, #0]
 80013be:	602b      	str	r3, [r5, #0]
 80013c0:	d032      	beq.n	8001428 <__sflush_r+0x98>
 80013c2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80013c4:	89a3      	ldrh	r3, [r4, #12]
 80013c6:	075a      	lsls	r2, r3, #29
 80013c8:	d505      	bpl.n	80013d6 <__sflush_r+0x46>
 80013ca:	6863      	ldr	r3, [r4, #4]
 80013cc:	1ac0      	subs	r0, r0, r3
 80013ce:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80013d0:	b10b      	cbz	r3, 80013d6 <__sflush_r+0x46>
 80013d2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80013d4:	1ac0      	subs	r0, r0, r3
 80013d6:	2300      	movs	r3, #0
 80013d8:	4602      	mov	r2, r0
 80013da:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80013dc:	6a21      	ldr	r1, [r4, #32]
 80013de:	4628      	mov	r0, r5
 80013e0:	47b0      	blx	r6
 80013e2:	1c43      	adds	r3, r0, #1
 80013e4:	89a3      	ldrh	r3, [r4, #12]
 80013e6:	d106      	bne.n	80013f6 <__sflush_r+0x66>
 80013e8:	6829      	ldr	r1, [r5, #0]
 80013ea:	291d      	cmp	r1, #29
 80013ec:	d82c      	bhi.n	8001448 <__sflush_r+0xb8>
 80013ee:	4a2a      	ldr	r2, [pc, #168]	; (8001498 <__sflush_r+0x108>)
 80013f0:	40ca      	lsrs	r2, r1
 80013f2:	07d6      	lsls	r6, r2, #31
 80013f4:	d528      	bpl.n	8001448 <__sflush_r+0xb8>
 80013f6:	2200      	movs	r2, #0
 80013f8:	6062      	str	r2, [r4, #4]
 80013fa:	04d9      	lsls	r1, r3, #19
 80013fc:	6922      	ldr	r2, [r4, #16]
 80013fe:	6022      	str	r2, [r4, #0]
 8001400:	d504      	bpl.n	800140c <__sflush_r+0x7c>
 8001402:	1c42      	adds	r2, r0, #1
 8001404:	d101      	bne.n	800140a <__sflush_r+0x7a>
 8001406:	682b      	ldr	r3, [r5, #0]
 8001408:	b903      	cbnz	r3, 800140c <__sflush_r+0x7c>
 800140a:	6560      	str	r0, [r4, #84]	; 0x54
 800140c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800140e:	602f      	str	r7, [r5, #0]
 8001410:	2900      	cmp	r1, #0
 8001412:	d0ca      	beq.n	80013aa <__sflush_r+0x1a>
 8001414:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001418:	4299      	cmp	r1, r3
 800141a:	d002      	beq.n	8001422 <__sflush_r+0x92>
 800141c:	4628      	mov	r0, r5
 800141e:	f000 f8fb 	bl	8001618 <_free_r>
 8001422:	2000      	movs	r0, #0
 8001424:	6360      	str	r0, [r4, #52]	; 0x34
 8001426:	e7c1      	b.n	80013ac <__sflush_r+0x1c>
 8001428:	6a21      	ldr	r1, [r4, #32]
 800142a:	2301      	movs	r3, #1
 800142c:	4628      	mov	r0, r5
 800142e:	47b0      	blx	r6
 8001430:	1c41      	adds	r1, r0, #1
 8001432:	d1c7      	bne.n	80013c4 <__sflush_r+0x34>
 8001434:	682b      	ldr	r3, [r5, #0]
 8001436:	2b00      	cmp	r3, #0
 8001438:	d0c4      	beq.n	80013c4 <__sflush_r+0x34>
 800143a:	2b1d      	cmp	r3, #29
 800143c:	d001      	beq.n	8001442 <__sflush_r+0xb2>
 800143e:	2b16      	cmp	r3, #22
 8001440:	d101      	bne.n	8001446 <__sflush_r+0xb6>
 8001442:	602f      	str	r7, [r5, #0]
 8001444:	e7b1      	b.n	80013aa <__sflush_r+0x1a>
 8001446:	89a3      	ldrh	r3, [r4, #12]
 8001448:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800144c:	81a3      	strh	r3, [r4, #12]
 800144e:	e7ad      	b.n	80013ac <__sflush_r+0x1c>
 8001450:	690f      	ldr	r7, [r1, #16]
 8001452:	2f00      	cmp	r7, #0
 8001454:	d0a9      	beq.n	80013aa <__sflush_r+0x1a>
 8001456:	0793      	lsls	r3, r2, #30
 8001458:	680e      	ldr	r6, [r1, #0]
 800145a:	bf08      	it	eq
 800145c:	694b      	ldreq	r3, [r1, #20]
 800145e:	600f      	str	r7, [r1, #0]
 8001460:	bf18      	it	ne
 8001462:	2300      	movne	r3, #0
 8001464:	eba6 0807 	sub.w	r8, r6, r7
 8001468:	608b      	str	r3, [r1, #8]
 800146a:	f1b8 0f00 	cmp.w	r8, #0
 800146e:	dd9c      	ble.n	80013aa <__sflush_r+0x1a>
 8001470:	6a21      	ldr	r1, [r4, #32]
 8001472:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001474:	4643      	mov	r3, r8
 8001476:	463a      	mov	r2, r7
 8001478:	4628      	mov	r0, r5
 800147a:	47b0      	blx	r6
 800147c:	2800      	cmp	r0, #0
 800147e:	dc06      	bgt.n	800148e <__sflush_r+0xfe>
 8001480:	89a3      	ldrh	r3, [r4, #12]
 8001482:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001486:	81a3      	strh	r3, [r4, #12]
 8001488:	f04f 30ff 	mov.w	r0, #4294967295
 800148c:	e78e      	b.n	80013ac <__sflush_r+0x1c>
 800148e:	4407      	add	r7, r0
 8001490:	eba8 0800 	sub.w	r8, r8, r0
 8001494:	e7e9      	b.n	800146a <__sflush_r+0xda>
 8001496:	bf00      	nop
 8001498:	20400001 	.word	0x20400001

0800149c <_fflush_r>:
 800149c:	b538      	push	{r3, r4, r5, lr}
 800149e:	690b      	ldr	r3, [r1, #16]
 80014a0:	4605      	mov	r5, r0
 80014a2:	460c      	mov	r4, r1
 80014a4:	b913      	cbnz	r3, 80014ac <_fflush_r+0x10>
 80014a6:	2500      	movs	r5, #0
 80014a8:	4628      	mov	r0, r5
 80014aa:	bd38      	pop	{r3, r4, r5, pc}
 80014ac:	b118      	cbz	r0, 80014b6 <_fflush_r+0x1a>
 80014ae:	6983      	ldr	r3, [r0, #24]
 80014b0:	b90b      	cbnz	r3, 80014b6 <_fflush_r+0x1a>
 80014b2:	f7ff fa4f 	bl	8000954 <__sinit>
 80014b6:	4b14      	ldr	r3, [pc, #80]	; (8001508 <_fflush_r+0x6c>)
 80014b8:	429c      	cmp	r4, r3
 80014ba:	d11b      	bne.n	80014f4 <_fflush_r+0x58>
 80014bc:	686c      	ldr	r4, [r5, #4]
 80014be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80014c2:	2b00      	cmp	r3, #0
 80014c4:	d0ef      	beq.n	80014a6 <_fflush_r+0xa>
 80014c6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80014c8:	07d0      	lsls	r0, r2, #31
 80014ca:	d404      	bmi.n	80014d6 <_fflush_r+0x3a>
 80014cc:	0599      	lsls	r1, r3, #22
 80014ce:	d402      	bmi.n	80014d6 <_fflush_r+0x3a>
 80014d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80014d2:	f7ff fadd 	bl	8000a90 <__retarget_lock_acquire_recursive>
 80014d6:	4628      	mov	r0, r5
 80014d8:	4621      	mov	r1, r4
 80014da:	f7ff ff59 	bl	8001390 <__sflush_r>
 80014de:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80014e0:	07da      	lsls	r2, r3, #31
 80014e2:	4605      	mov	r5, r0
 80014e4:	d4e0      	bmi.n	80014a8 <_fflush_r+0xc>
 80014e6:	89a3      	ldrh	r3, [r4, #12]
 80014e8:	059b      	lsls	r3, r3, #22
 80014ea:	d4dd      	bmi.n	80014a8 <_fflush_r+0xc>
 80014ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80014ee:	f7ff fad0 	bl	8000a92 <__retarget_lock_release_recursive>
 80014f2:	e7d9      	b.n	80014a8 <_fflush_r+0xc>
 80014f4:	4b05      	ldr	r3, [pc, #20]	; (800150c <_fflush_r+0x70>)
 80014f6:	429c      	cmp	r4, r3
 80014f8:	d101      	bne.n	80014fe <_fflush_r+0x62>
 80014fa:	68ac      	ldr	r4, [r5, #8]
 80014fc:	e7df      	b.n	80014be <_fflush_r+0x22>
 80014fe:	4b04      	ldr	r3, [pc, #16]	; (8001510 <_fflush_r+0x74>)
 8001500:	429c      	cmp	r4, r3
 8001502:	bf08      	it	eq
 8001504:	68ec      	ldreq	r4, [r5, #12]
 8001506:	e7da      	b.n	80014be <_fflush_r+0x22>
 8001508:	08001cb8 	.word	0x08001cb8
 800150c:	08001cd8 	.word	0x08001cd8
 8001510:	08001c98 	.word	0x08001c98

08001514 <_lseek_r>:
 8001514:	b538      	push	{r3, r4, r5, lr}
 8001516:	4d07      	ldr	r5, [pc, #28]	; (8001534 <_lseek_r+0x20>)
 8001518:	4604      	mov	r4, r0
 800151a:	4608      	mov	r0, r1
 800151c:	4611      	mov	r1, r2
 800151e:	2200      	movs	r2, #0
 8001520:	602a      	str	r2, [r5, #0]
 8001522:	461a      	mov	r2, r3
 8001524:	f000 f99c 	bl	8001860 <_lseek>
 8001528:	1c43      	adds	r3, r0, #1
 800152a:	d102      	bne.n	8001532 <_lseek_r+0x1e>
 800152c:	682b      	ldr	r3, [r5, #0]
 800152e:	b103      	cbz	r3, 8001532 <_lseek_r+0x1e>
 8001530:	6023      	str	r3, [r4, #0]
 8001532:	bd38      	pop	{r3, r4, r5, pc}
 8001534:	2000014c 	.word	0x2000014c

08001538 <__swhatbuf_r>:
 8001538:	b570      	push	{r4, r5, r6, lr}
 800153a:	460e      	mov	r6, r1
 800153c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001540:	2900      	cmp	r1, #0
 8001542:	b096      	sub	sp, #88	; 0x58
 8001544:	4614      	mov	r4, r2
 8001546:	461d      	mov	r5, r3
 8001548:	da07      	bge.n	800155a <__swhatbuf_r+0x22>
 800154a:	2300      	movs	r3, #0
 800154c:	602b      	str	r3, [r5, #0]
 800154e:	89b3      	ldrh	r3, [r6, #12]
 8001550:	061a      	lsls	r2, r3, #24
 8001552:	d410      	bmi.n	8001576 <__swhatbuf_r+0x3e>
 8001554:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001558:	e00e      	b.n	8001578 <__swhatbuf_r+0x40>
 800155a:	466a      	mov	r2, sp
 800155c:	f000 f8be 	bl	80016dc <_fstat_r>
 8001560:	2800      	cmp	r0, #0
 8001562:	dbf2      	blt.n	800154a <__swhatbuf_r+0x12>
 8001564:	9a01      	ldr	r2, [sp, #4]
 8001566:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800156a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800156e:	425a      	negs	r2, r3
 8001570:	415a      	adcs	r2, r3
 8001572:	602a      	str	r2, [r5, #0]
 8001574:	e7ee      	b.n	8001554 <__swhatbuf_r+0x1c>
 8001576:	2340      	movs	r3, #64	; 0x40
 8001578:	2000      	movs	r0, #0
 800157a:	6023      	str	r3, [r4, #0]
 800157c:	b016      	add	sp, #88	; 0x58
 800157e:	bd70      	pop	{r4, r5, r6, pc}

08001580 <__smakebuf_r>:
 8001580:	898b      	ldrh	r3, [r1, #12]
 8001582:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001584:	079d      	lsls	r5, r3, #30
 8001586:	4606      	mov	r6, r0
 8001588:	460c      	mov	r4, r1
 800158a:	d507      	bpl.n	800159c <__smakebuf_r+0x1c>
 800158c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001590:	6023      	str	r3, [r4, #0]
 8001592:	6123      	str	r3, [r4, #16]
 8001594:	2301      	movs	r3, #1
 8001596:	6163      	str	r3, [r4, #20]
 8001598:	b002      	add	sp, #8
 800159a:	bd70      	pop	{r4, r5, r6, pc}
 800159c:	ab01      	add	r3, sp, #4
 800159e:	466a      	mov	r2, sp
 80015a0:	f7ff ffca 	bl	8001538 <__swhatbuf_r>
 80015a4:	9900      	ldr	r1, [sp, #0]
 80015a6:	4605      	mov	r5, r0
 80015a8:	4630      	mov	r0, r6
 80015aa:	f7ff fa73 	bl	8000a94 <_malloc_r>
 80015ae:	b948      	cbnz	r0, 80015c4 <__smakebuf_r+0x44>
 80015b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80015b4:	059a      	lsls	r2, r3, #22
 80015b6:	d4ef      	bmi.n	8001598 <__smakebuf_r+0x18>
 80015b8:	f023 0303 	bic.w	r3, r3, #3
 80015bc:	f043 0302 	orr.w	r3, r3, #2
 80015c0:	81a3      	strh	r3, [r4, #12]
 80015c2:	e7e3      	b.n	800158c <__smakebuf_r+0xc>
 80015c4:	4b0d      	ldr	r3, [pc, #52]	; (80015fc <__smakebuf_r+0x7c>)
 80015c6:	62b3      	str	r3, [r6, #40]	; 0x28
 80015c8:	89a3      	ldrh	r3, [r4, #12]
 80015ca:	6020      	str	r0, [r4, #0]
 80015cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80015d0:	81a3      	strh	r3, [r4, #12]
 80015d2:	9b00      	ldr	r3, [sp, #0]
 80015d4:	6163      	str	r3, [r4, #20]
 80015d6:	9b01      	ldr	r3, [sp, #4]
 80015d8:	6120      	str	r0, [r4, #16]
 80015da:	b15b      	cbz	r3, 80015f4 <__smakebuf_r+0x74>
 80015dc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80015e0:	4630      	mov	r0, r6
 80015e2:	f000 f88d 	bl	8001700 <_isatty_r>
 80015e6:	b128      	cbz	r0, 80015f4 <__smakebuf_r+0x74>
 80015e8:	89a3      	ldrh	r3, [r4, #12]
 80015ea:	f023 0303 	bic.w	r3, r3, #3
 80015ee:	f043 0301 	orr.w	r3, r3, #1
 80015f2:	81a3      	strh	r3, [r4, #12]
 80015f4:	89a0      	ldrh	r0, [r4, #12]
 80015f6:	4305      	orrs	r5, r0
 80015f8:	81a5      	strh	r5, [r4, #12]
 80015fa:	e7cd      	b.n	8001598 <__smakebuf_r+0x18>
 80015fc:	080008ed 	.word	0x080008ed

08001600 <__malloc_lock>:
 8001600:	4801      	ldr	r0, [pc, #4]	; (8001608 <__malloc_lock+0x8>)
 8001602:	f7ff ba45 	b.w	8000a90 <__retarget_lock_acquire_recursive>
 8001606:	bf00      	nop
 8001608:	20000144 	.word	0x20000144

0800160c <__malloc_unlock>:
 800160c:	4801      	ldr	r0, [pc, #4]	; (8001614 <__malloc_unlock+0x8>)
 800160e:	f7ff ba40 	b.w	8000a92 <__retarget_lock_release_recursive>
 8001612:	bf00      	nop
 8001614:	20000144 	.word	0x20000144

08001618 <_free_r>:
 8001618:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800161a:	2900      	cmp	r1, #0
 800161c:	d048      	beq.n	80016b0 <_free_r+0x98>
 800161e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001622:	9001      	str	r0, [sp, #4]
 8001624:	2b00      	cmp	r3, #0
 8001626:	f1a1 0404 	sub.w	r4, r1, #4
 800162a:	bfb8      	it	lt
 800162c:	18e4      	addlt	r4, r4, r3
 800162e:	f7ff ffe7 	bl	8001600 <__malloc_lock>
 8001632:	4a20      	ldr	r2, [pc, #128]	; (80016b4 <_free_r+0x9c>)
 8001634:	9801      	ldr	r0, [sp, #4]
 8001636:	6813      	ldr	r3, [r2, #0]
 8001638:	4615      	mov	r5, r2
 800163a:	b933      	cbnz	r3, 800164a <_free_r+0x32>
 800163c:	6063      	str	r3, [r4, #4]
 800163e:	6014      	str	r4, [r2, #0]
 8001640:	b003      	add	sp, #12
 8001642:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001646:	f7ff bfe1 	b.w	800160c <__malloc_unlock>
 800164a:	42a3      	cmp	r3, r4
 800164c:	d90b      	bls.n	8001666 <_free_r+0x4e>
 800164e:	6821      	ldr	r1, [r4, #0]
 8001650:	1862      	adds	r2, r4, r1
 8001652:	4293      	cmp	r3, r2
 8001654:	bf04      	itt	eq
 8001656:	681a      	ldreq	r2, [r3, #0]
 8001658:	685b      	ldreq	r3, [r3, #4]
 800165a:	6063      	str	r3, [r4, #4]
 800165c:	bf04      	itt	eq
 800165e:	1852      	addeq	r2, r2, r1
 8001660:	6022      	streq	r2, [r4, #0]
 8001662:	602c      	str	r4, [r5, #0]
 8001664:	e7ec      	b.n	8001640 <_free_r+0x28>
 8001666:	461a      	mov	r2, r3
 8001668:	685b      	ldr	r3, [r3, #4]
 800166a:	b10b      	cbz	r3, 8001670 <_free_r+0x58>
 800166c:	42a3      	cmp	r3, r4
 800166e:	d9fa      	bls.n	8001666 <_free_r+0x4e>
 8001670:	6811      	ldr	r1, [r2, #0]
 8001672:	1855      	adds	r5, r2, r1
 8001674:	42a5      	cmp	r5, r4
 8001676:	d10b      	bne.n	8001690 <_free_r+0x78>
 8001678:	6824      	ldr	r4, [r4, #0]
 800167a:	4421      	add	r1, r4
 800167c:	1854      	adds	r4, r2, r1
 800167e:	42a3      	cmp	r3, r4
 8001680:	6011      	str	r1, [r2, #0]
 8001682:	d1dd      	bne.n	8001640 <_free_r+0x28>
 8001684:	681c      	ldr	r4, [r3, #0]
 8001686:	685b      	ldr	r3, [r3, #4]
 8001688:	6053      	str	r3, [r2, #4]
 800168a:	4421      	add	r1, r4
 800168c:	6011      	str	r1, [r2, #0]
 800168e:	e7d7      	b.n	8001640 <_free_r+0x28>
 8001690:	d902      	bls.n	8001698 <_free_r+0x80>
 8001692:	230c      	movs	r3, #12
 8001694:	6003      	str	r3, [r0, #0]
 8001696:	e7d3      	b.n	8001640 <_free_r+0x28>
 8001698:	6825      	ldr	r5, [r4, #0]
 800169a:	1961      	adds	r1, r4, r5
 800169c:	428b      	cmp	r3, r1
 800169e:	bf04      	itt	eq
 80016a0:	6819      	ldreq	r1, [r3, #0]
 80016a2:	685b      	ldreq	r3, [r3, #4]
 80016a4:	6063      	str	r3, [r4, #4]
 80016a6:	bf04      	itt	eq
 80016a8:	1949      	addeq	r1, r1, r5
 80016aa:	6021      	streq	r1, [r4, #0]
 80016ac:	6054      	str	r4, [r2, #4]
 80016ae:	e7c7      	b.n	8001640 <_free_r+0x28>
 80016b0:	b003      	add	sp, #12
 80016b2:	bd30      	pop	{r4, r5, pc}
 80016b4:	2000008c 	.word	0x2000008c

080016b8 <_read_r>:
 80016b8:	b538      	push	{r3, r4, r5, lr}
 80016ba:	4d07      	ldr	r5, [pc, #28]	; (80016d8 <_read_r+0x20>)
 80016bc:	4604      	mov	r4, r0
 80016be:	4608      	mov	r0, r1
 80016c0:	4611      	mov	r1, r2
 80016c2:	2200      	movs	r2, #0
 80016c4:	602a      	str	r2, [r5, #0]
 80016c6:	461a      	mov	r2, r3
 80016c8:	f000 f872 	bl	80017b0 <_read>
 80016cc:	1c43      	adds	r3, r0, #1
 80016ce:	d102      	bne.n	80016d6 <_read_r+0x1e>
 80016d0:	682b      	ldr	r3, [r5, #0]
 80016d2:	b103      	cbz	r3, 80016d6 <_read_r+0x1e>
 80016d4:	6023      	str	r3, [r4, #0]
 80016d6:	bd38      	pop	{r3, r4, r5, pc}
 80016d8:	2000014c 	.word	0x2000014c

080016dc <_fstat_r>:
 80016dc:	b538      	push	{r3, r4, r5, lr}
 80016de:	4d07      	ldr	r5, [pc, #28]	; (80016fc <_fstat_r+0x20>)
 80016e0:	2300      	movs	r3, #0
 80016e2:	4604      	mov	r4, r0
 80016e4:	4608      	mov	r0, r1
 80016e6:	4611      	mov	r1, r2
 80016e8:	602b      	str	r3, [r5, #0]
 80016ea:	f000 f944 	bl	8001976 <_fstat>
 80016ee:	1c43      	adds	r3, r0, #1
 80016f0:	d102      	bne.n	80016f8 <_fstat_r+0x1c>
 80016f2:	682b      	ldr	r3, [r5, #0]
 80016f4:	b103      	cbz	r3, 80016f8 <_fstat_r+0x1c>
 80016f6:	6023      	str	r3, [r4, #0]
 80016f8:	bd38      	pop	{r3, r4, r5, pc}
 80016fa:	bf00      	nop
 80016fc:	2000014c 	.word	0x2000014c

08001700 <_isatty_r>:
 8001700:	b538      	push	{r3, r4, r5, lr}
 8001702:	4d06      	ldr	r5, [pc, #24]	; (800171c <_isatty_r+0x1c>)
 8001704:	2300      	movs	r3, #0
 8001706:	4604      	mov	r4, r0
 8001708:	4608      	mov	r0, r1
 800170a:	602b      	str	r3, [r5, #0]
 800170c:	f000 fa98 	bl	8001c40 <_isatty>
 8001710:	1c43      	adds	r3, r0, #1
 8001712:	d102      	bne.n	800171a <_isatty_r+0x1a>
 8001714:	682b      	ldr	r3, [r5, #0]
 8001716:	b103      	cbz	r3, 800171a <_isatty_r+0x1a>
 8001718:	6023      	str	r3, [r4, #0]
 800171a:	bd38      	pop	{r3, r4, r5, pc}
 800171c:	2000014c 	.word	0x2000014c

08001720 <findslot>:
 8001720:	4b0a      	ldr	r3, [pc, #40]	; (800174c <findslot+0x2c>)
 8001722:	b510      	push	{r4, lr}
 8001724:	4604      	mov	r4, r0
 8001726:	6818      	ldr	r0, [r3, #0]
 8001728:	b118      	cbz	r0, 8001732 <findslot+0x12>
 800172a:	6983      	ldr	r3, [r0, #24]
 800172c:	b90b      	cbnz	r3, 8001732 <findslot+0x12>
 800172e:	f7ff f911 	bl	8000954 <__sinit>
 8001732:	2c13      	cmp	r4, #19
 8001734:	d807      	bhi.n	8001746 <findslot+0x26>
 8001736:	4806      	ldr	r0, [pc, #24]	; (8001750 <findslot+0x30>)
 8001738:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 800173c:	3201      	adds	r2, #1
 800173e:	d002      	beq.n	8001746 <findslot+0x26>
 8001740:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8001744:	bd10      	pop	{r4, pc}
 8001746:	2000      	movs	r0, #0
 8001748:	e7fc      	b.n	8001744 <findslot+0x24>
 800174a:	bf00      	nop
 800174c:	20000000 	.word	0x20000000
 8001750:	200000a0 	.word	0x200000a0

08001754 <checkerror>:
 8001754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001756:	1c43      	adds	r3, r0, #1
 8001758:	4604      	mov	r4, r0
 800175a:	d109      	bne.n	8001770 <checkerror+0x1c>
 800175c:	f7ff f858 	bl	8000810 <__errno>
 8001760:	2613      	movs	r6, #19
 8001762:	4605      	mov	r5, r0
 8001764:	2700      	movs	r7, #0
 8001766:	4630      	mov	r0, r6
 8001768:	4639      	mov	r1, r7
 800176a:	beab      	bkpt	0x00ab
 800176c:	4606      	mov	r6, r0
 800176e:	602e      	str	r6, [r5, #0]
 8001770:	4620      	mov	r0, r4
 8001772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001774 <error>:
 8001774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001776:	4604      	mov	r4, r0
 8001778:	f7ff f84a 	bl	8000810 <__errno>
 800177c:	2613      	movs	r6, #19
 800177e:	4605      	mov	r5, r0
 8001780:	2700      	movs	r7, #0
 8001782:	4630      	mov	r0, r6
 8001784:	4639      	mov	r1, r7
 8001786:	beab      	bkpt	0x00ab
 8001788:	4606      	mov	r6, r0
 800178a:	602e      	str	r6, [r5, #0]
 800178c:	4620      	mov	r0, r4
 800178e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001790 <_swiread>:
 8001790:	b530      	push	{r4, r5, lr}
 8001792:	b085      	sub	sp, #20
 8001794:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001798:	9203      	str	r2, [sp, #12]
 800179a:	2406      	movs	r4, #6
 800179c:	ad01      	add	r5, sp, #4
 800179e:	4620      	mov	r0, r4
 80017a0:	4629      	mov	r1, r5
 80017a2:	beab      	bkpt	0x00ab
 80017a4:	4604      	mov	r4, r0
 80017a6:	4620      	mov	r0, r4
 80017a8:	f7ff ffd4 	bl	8001754 <checkerror>
 80017ac:	b005      	add	sp, #20
 80017ae:	bd30      	pop	{r4, r5, pc}

080017b0 <_read>:
 80017b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80017b2:	4615      	mov	r5, r2
 80017b4:	9101      	str	r1, [sp, #4]
 80017b6:	f7ff ffb3 	bl	8001720 <findslot>
 80017ba:	9901      	ldr	r1, [sp, #4]
 80017bc:	4604      	mov	r4, r0
 80017be:	b938      	cbnz	r0, 80017d0 <_read+0x20>
 80017c0:	f7ff f826 	bl	8000810 <__errno>
 80017c4:	2309      	movs	r3, #9
 80017c6:	6003      	str	r3, [r0, #0]
 80017c8:	f04f 30ff 	mov.w	r0, #4294967295
 80017cc:	b003      	add	sp, #12
 80017ce:	bd30      	pop	{r4, r5, pc}
 80017d0:	6800      	ldr	r0, [r0, #0]
 80017d2:	462a      	mov	r2, r5
 80017d4:	f7ff ffdc 	bl	8001790 <_swiread>
 80017d8:	1c43      	adds	r3, r0, #1
 80017da:	d0f7      	beq.n	80017cc <_read+0x1c>
 80017dc:	6863      	ldr	r3, [r4, #4]
 80017de:	1a2a      	subs	r2, r5, r0
 80017e0:	4413      	add	r3, r2
 80017e2:	6063      	str	r3, [r4, #4]
 80017e4:	4610      	mov	r0, r2
 80017e6:	e7f1      	b.n	80017cc <_read+0x1c>

080017e8 <_swilseek>:
 80017e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80017ea:	460c      	mov	r4, r1
 80017ec:	4616      	mov	r6, r2
 80017ee:	f7ff ff97 	bl	8001720 <findslot>
 80017f2:	4605      	mov	r5, r0
 80017f4:	b940      	cbnz	r0, 8001808 <_swilseek+0x20>
 80017f6:	f7ff f80b 	bl	8000810 <__errno>
 80017fa:	2309      	movs	r3, #9
 80017fc:	6003      	str	r3, [r0, #0]
 80017fe:	f04f 34ff 	mov.w	r4, #4294967295
 8001802:	4620      	mov	r0, r4
 8001804:	b003      	add	sp, #12
 8001806:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001808:	2e02      	cmp	r6, #2
 800180a:	d903      	bls.n	8001814 <_swilseek+0x2c>
 800180c:	f7ff f800 	bl	8000810 <__errno>
 8001810:	2316      	movs	r3, #22
 8001812:	e7f3      	b.n	80017fc <_swilseek+0x14>
 8001814:	2e01      	cmp	r6, #1
 8001816:	d112      	bne.n	800183e <_swilseek+0x56>
 8001818:	6843      	ldr	r3, [r0, #4]
 800181a:	18e4      	adds	r4, r4, r3
 800181c:	d4f6      	bmi.n	800180c <_swilseek+0x24>
 800181e:	682b      	ldr	r3, [r5, #0]
 8001820:	260a      	movs	r6, #10
 8001822:	e9cd 3400 	strd	r3, r4, [sp]
 8001826:	466f      	mov	r7, sp
 8001828:	4630      	mov	r0, r6
 800182a:	4639      	mov	r1, r7
 800182c:	beab      	bkpt	0x00ab
 800182e:	4606      	mov	r6, r0
 8001830:	4630      	mov	r0, r6
 8001832:	f7ff ff8f 	bl	8001754 <checkerror>
 8001836:	2800      	cmp	r0, #0
 8001838:	dbe1      	blt.n	80017fe <_swilseek+0x16>
 800183a:	606c      	str	r4, [r5, #4]
 800183c:	e7e1      	b.n	8001802 <_swilseek+0x1a>
 800183e:	2e02      	cmp	r6, #2
 8001840:	d1ed      	bne.n	800181e <_swilseek+0x36>
 8001842:	6803      	ldr	r3, [r0, #0]
 8001844:	9300      	str	r3, [sp, #0]
 8001846:	260c      	movs	r6, #12
 8001848:	466f      	mov	r7, sp
 800184a:	4630      	mov	r0, r6
 800184c:	4639      	mov	r1, r7
 800184e:	beab      	bkpt	0x00ab
 8001850:	4606      	mov	r6, r0
 8001852:	4630      	mov	r0, r6
 8001854:	f7ff ff7e 	bl	8001754 <checkerror>
 8001858:	1c43      	adds	r3, r0, #1
 800185a:	d0d0      	beq.n	80017fe <_swilseek+0x16>
 800185c:	4404      	add	r4, r0
 800185e:	e7de      	b.n	800181e <_swilseek+0x36>

08001860 <_lseek>:
 8001860:	f7ff bfc2 	b.w	80017e8 <_swilseek>

08001864 <_swiwrite>:
 8001864:	b530      	push	{r4, r5, lr}
 8001866:	b085      	sub	sp, #20
 8001868:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800186c:	9203      	str	r2, [sp, #12]
 800186e:	2405      	movs	r4, #5
 8001870:	ad01      	add	r5, sp, #4
 8001872:	4620      	mov	r0, r4
 8001874:	4629      	mov	r1, r5
 8001876:	beab      	bkpt	0x00ab
 8001878:	4604      	mov	r4, r0
 800187a:	4620      	mov	r0, r4
 800187c:	f7ff ff6a 	bl	8001754 <checkerror>
 8001880:	b005      	add	sp, #20
 8001882:	bd30      	pop	{r4, r5, pc}

08001884 <_write>:
 8001884:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001886:	4615      	mov	r5, r2
 8001888:	9101      	str	r1, [sp, #4]
 800188a:	f7ff ff49 	bl	8001720 <findslot>
 800188e:	9901      	ldr	r1, [sp, #4]
 8001890:	4604      	mov	r4, r0
 8001892:	b930      	cbnz	r0, 80018a2 <_write+0x1e>
 8001894:	f7fe ffbc 	bl	8000810 <__errno>
 8001898:	2309      	movs	r3, #9
 800189a:	6003      	str	r3, [r0, #0]
 800189c:	f04f 30ff 	mov.w	r0, #4294967295
 80018a0:	e012      	b.n	80018c8 <_write+0x44>
 80018a2:	6800      	ldr	r0, [r0, #0]
 80018a4:	462a      	mov	r2, r5
 80018a6:	f7ff ffdd 	bl	8001864 <_swiwrite>
 80018aa:	2800      	cmp	r0, #0
 80018ac:	dbf6      	blt.n	800189c <_write+0x18>
 80018ae:	6862      	ldr	r2, [r4, #4]
 80018b0:	1a2b      	subs	r3, r5, r0
 80018b2:	441a      	add	r2, r3
 80018b4:	42a8      	cmp	r0, r5
 80018b6:	6062      	str	r2, [r4, #4]
 80018b8:	d105      	bne.n	80018c6 <_write+0x42>
 80018ba:	2000      	movs	r0, #0
 80018bc:	b003      	add	sp, #12
 80018be:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80018c2:	f7ff bf57 	b.w	8001774 <error>
 80018c6:	4618      	mov	r0, r3
 80018c8:	b003      	add	sp, #12
 80018ca:	bd30      	pop	{r4, r5, pc}

080018cc <_swiclose>:
 80018cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80018ce:	2402      	movs	r4, #2
 80018d0:	9001      	str	r0, [sp, #4]
 80018d2:	ad01      	add	r5, sp, #4
 80018d4:	4620      	mov	r0, r4
 80018d6:	4629      	mov	r1, r5
 80018d8:	beab      	bkpt	0x00ab
 80018da:	4604      	mov	r4, r0
 80018dc:	4620      	mov	r0, r4
 80018de:	f7ff ff39 	bl	8001754 <checkerror>
 80018e2:	b003      	add	sp, #12
 80018e4:	bd30      	pop	{r4, r5, pc}
	...

080018e8 <_close>:
 80018e8:	b538      	push	{r3, r4, r5, lr}
 80018ea:	4605      	mov	r5, r0
 80018ec:	f7ff ff18 	bl	8001720 <findslot>
 80018f0:	4604      	mov	r4, r0
 80018f2:	b930      	cbnz	r0, 8001902 <_close+0x1a>
 80018f4:	f7fe ff8c 	bl	8000810 <__errno>
 80018f8:	2309      	movs	r3, #9
 80018fa:	6003      	str	r3, [r0, #0]
 80018fc:	f04f 30ff 	mov.w	r0, #4294967295
 8001900:	bd38      	pop	{r3, r4, r5, pc}
 8001902:	3d01      	subs	r5, #1
 8001904:	2d01      	cmp	r5, #1
 8001906:	d809      	bhi.n	800191c <_close+0x34>
 8001908:	4b09      	ldr	r3, [pc, #36]	; (8001930 <_close+0x48>)
 800190a:	689a      	ldr	r2, [r3, #8]
 800190c:	691b      	ldr	r3, [r3, #16]
 800190e:	429a      	cmp	r2, r3
 8001910:	d104      	bne.n	800191c <_close+0x34>
 8001912:	f04f 33ff 	mov.w	r3, #4294967295
 8001916:	6003      	str	r3, [r0, #0]
 8001918:	2000      	movs	r0, #0
 800191a:	e7f1      	b.n	8001900 <_close+0x18>
 800191c:	6820      	ldr	r0, [r4, #0]
 800191e:	f7ff ffd5 	bl	80018cc <_swiclose>
 8001922:	2800      	cmp	r0, #0
 8001924:	d1ec      	bne.n	8001900 <_close+0x18>
 8001926:	f04f 33ff 	mov.w	r3, #4294967295
 800192a:	6023      	str	r3, [r4, #0]
 800192c:	e7e8      	b.n	8001900 <_close+0x18>
 800192e:	bf00      	nop
 8001930:	200000a0 	.word	0x200000a0

08001934 <_swistat>:
 8001934:	b570      	push	{r4, r5, r6, lr}
 8001936:	460c      	mov	r4, r1
 8001938:	f7ff fef2 	bl	8001720 <findslot>
 800193c:	4605      	mov	r5, r0
 800193e:	b930      	cbnz	r0, 800194e <_swistat+0x1a>
 8001940:	f7fe ff66 	bl	8000810 <__errno>
 8001944:	2309      	movs	r3, #9
 8001946:	6003      	str	r3, [r0, #0]
 8001948:	f04f 30ff 	mov.w	r0, #4294967295
 800194c:	bd70      	pop	{r4, r5, r6, pc}
 800194e:	6863      	ldr	r3, [r4, #4]
 8001950:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001954:	6063      	str	r3, [r4, #4]
 8001956:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800195a:	64a3      	str	r3, [r4, #72]	; 0x48
 800195c:	260c      	movs	r6, #12
 800195e:	4630      	mov	r0, r6
 8001960:	4629      	mov	r1, r5
 8001962:	beab      	bkpt	0x00ab
 8001964:	4605      	mov	r5, r0
 8001966:	4628      	mov	r0, r5
 8001968:	f7ff fef4 	bl	8001754 <checkerror>
 800196c:	1c43      	adds	r3, r0, #1
 800196e:	bf1c      	itt	ne
 8001970:	6120      	strne	r0, [r4, #16]
 8001972:	2000      	movne	r0, #0
 8001974:	e7ea      	b.n	800194c <_swistat+0x18>

08001976 <_fstat>:
 8001976:	460b      	mov	r3, r1
 8001978:	b510      	push	{r4, lr}
 800197a:	2100      	movs	r1, #0
 800197c:	4604      	mov	r4, r0
 800197e:	2258      	movs	r2, #88	; 0x58
 8001980:	4618      	mov	r0, r3
 8001982:	f7fe ff6f 	bl	8000864 <memset>
 8001986:	4601      	mov	r1, r0
 8001988:	4620      	mov	r0, r4
 800198a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800198e:	f7ff bfd1 	b.w	8001934 <_swistat>

08001992 <_stat>:
 8001992:	b538      	push	{r3, r4, r5, lr}
 8001994:	460d      	mov	r5, r1
 8001996:	4604      	mov	r4, r0
 8001998:	2258      	movs	r2, #88	; 0x58
 800199a:	2100      	movs	r1, #0
 800199c:	4628      	mov	r0, r5
 800199e:	f7fe ff61 	bl	8000864 <memset>
 80019a2:	4620      	mov	r0, r4
 80019a4:	2100      	movs	r1, #0
 80019a6:	f000 f811 	bl	80019cc <_swiopen>
 80019aa:	1c43      	adds	r3, r0, #1
 80019ac:	4604      	mov	r4, r0
 80019ae:	d00b      	beq.n	80019c8 <_stat+0x36>
 80019b0:	686b      	ldr	r3, [r5, #4]
 80019b2:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 80019b6:	606b      	str	r3, [r5, #4]
 80019b8:	4629      	mov	r1, r5
 80019ba:	f7ff ffbb 	bl	8001934 <_swistat>
 80019be:	4605      	mov	r5, r0
 80019c0:	4620      	mov	r0, r4
 80019c2:	f7ff ff91 	bl	80018e8 <_close>
 80019c6:	462c      	mov	r4, r5
 80019c8:	4620      	mov	r0, r4
 80019ca:	bd38      	pop	{r3, r4, r5, pc}

080019cc <_swiopen>:
 80019cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80019d0:	4b2a      	ldr	r3, [pc, #168]	; (8001a7c <_swiopen+0xb0>)
 80019d2:	b097      	sub	sp, #92	; 0x5c
 80019d4:	4681      	mov	r9, r0
 80019d6:	460f      	mov	r7, r1
 80019d8:	2500      	movs	r5, #0
 80019da:	461e      	mov	r6, r3
 80019dc:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 80019e0:	1c61      	adds	r1, r4, #1
 80019e2:	d037      	beq.n	8001a54 <_swiopen+0x88>
 80019e4:	3501      	adds	r5, #1
 80019e6:	2d14      	cmp	r5, #20
 80019e8:	d1f8      	bne.n	80019dc <_swiopen+0x10>
 80019ea:	f7fe ff11 	bl	8000810 <__errno>
 80019ee:	2318      	movs	r3, #24
 80019f0:	6003      	str	r3, [r0, #0]
 80019f2:	f04f 34ff 	mov.w	r4, #4294967295
 80019f6:	e03d      	b.n	8001a74 <_swiopen+0xa8>
 80019f8:	f3c7 4400 	ubfx	r4, r7, #16, #1
 80019fc:	f240 6301 	movw	r3, #1537	; 0x601
 8001a00:	07ba      	lsls	r2, r7, #30
 8001a02:	bf48      	it	mi
 8001a04:	f044 0402 	orrmi.w	r4, r4, #2
 8001a08:	421f      	tst	r7, r3
 8001a0a:	bf18      	it	ne
 8001a0c:	f044 0404 	orrne.w	r4, r4, #4
 8001a10:	073b      	lsls	r3, r7, #28
 8001a12:	bf48      	it	mi
 8001a14:	f024 0404 	bicmi.w	r4, r4, #4
 8001a18:	4648      	mov	r0, r9
 8001a1a:	bf48      	it	mi
 8001a1c:	f044 0408 	orrmi.w	r4, r4, #8
 8001a20:	f8cd 9000 	str.w	r9, [sp]
 8001a24:	f7fe fc34 	bl	8000290 <strlen>
 8001a28:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8001a2c:	2401      	movs	r4, #1
 8001a2e:	4620      	mov	r0, r4
 8001a30:	4641      	mov	r1, r8
 8001a32:	beab      	bkpt	0x00ab
 8001a34:	4604      	mov	r4, r0
 8001a36:	2c00      	cmp	r4, #0
 8001a38:	db07      	blt.n	8001a4a <_swiopen+0x7e>
 8001a3a:	f846 4035 	str.w	r4, [r6, r5, lsl #3]
 8001a3e:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 8001a42:	2300      	movs	r3, #0
 8001a44:	6073      	str	r3, [r6, #4]
 8001a46:	462c      	mov	r4, r5
 8001a48:	e014      	b.n	8001a74 <_swiopen+0xa8>
 8001a4a:	4620      	mov	r0, r4
 8001a4c:	f7ff fe92 	bl	8001774 <error>
 8001a50:	4604      	mov	r4, r0
 8001a52:	e00f      	b.n	8001a74 <_swiopen+0xa8>
 8001a54:	f407 6320 	and.w	r3, r7, #2560	; 0xa00
 8001a58:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8001a5c:	46e8      	mov	r8, sp
 8001a5e:	d1cb      	bne.n	80019f8 <_swiopen+0x2c>
 8001a60:	4641      	mov	r1, r8
 8001a62:	4648      	mov	r0, r9
 8001a64:	f7ff ff95 	bl	8001992 <_stat>
 8001a68:	3001      	adds	r0, #1
 8001a6a:	d0c5      	beq.n	80019f8 <_swiopen+0x2c>
 8001a6c:	f7fe fed0 	bl	8000810 <__errno>
 8001a70:	2311      	movs	r3, #17
 8001a72:	6003      	str	r3, [r0, #0]
 8001a74:	4620      	mov	r0, r4
 8001a76:	b017      	add	sp, #92	; 0x5c
 8001a78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001a7c:	200000a0 	.word	0x200000a0

08001a80 <_get_semihosting_exts>:
 8001a80:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001a84:	4606      	mov	r6, r0
 8001a86:	460f      	mov	r7, r1
 8001a88:	482a      	ldr	r0, [pc, #168]	; (8001b34 <_get_semihosting_exts+0xb4>)
 8001a8a:	2100      	movs	r1, #0
 8001a8c:	4615      	mov	r5, r2
 8001a8e:	f7ff ff9d 	bl	80019cc <_swiopen>
 8001a92:	462a      	mov	r2, r5
 8001a94:	4604      	mov	r4, r0
 8001a96:	2100      	movs	r1, #0
 8001a98:	4630      	mov	r0, r6
 8001a9a:	f7fe fee3 	bl	8000864 <memset>
 8001a9e:	1c63      	adds	r3, r4, #1
 8001aa0:	d016      	beq.n	8001ad0 <_get_semihosting_exts+0x50>
 8001aa2:	4620      	mov	r0, r4
 8001aa4:	f7ff fe3c 	bl	8001720 <findslot>
 8001aa8:	f04f 090c 	mov.w	r9, #12
 8001aac:	4680      	mov	r8, r0
 8001aae:	4648      	mov	r0, r9
 8001ab0:	4641      	mov	r1, r8
 8001ab2:	beab      	bkpt	0x00ab
 8001ab4:	4680      	mov	r8, r0
 8001ab6:	4640      	mov	r0, r8
 8001ab8:	f7ff fe4c 	bl	8001754 <checkerror>
 8001abc:	2803      	cmp	r0, #3
 8001abe:	dd02      	ble.n	8001ac6 <_get_semihosting_exts+0x46>
 8001ac0:	1ec3      	subs	r3, r0, #3
 8001ac2:	42ab      	cmp	r3, r5
 8001ac4:	dc08      	bgt.n	8001ad8 <_get_semihosting_exts+0x58>
 8001ac6:	4620      	mov	r0, r4
 8001ac8:	f7ff ff0e 	bl	80018e8 <_close>
 8001acc:	f04f 34ff 	mov.w	r4, #4294967295
 8001ad0:	4620      	mov	r0, r4
 8001ad2:	b003      	add	sp, #12
 8001ad4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001ad8:	2204      	movs	r2, #4
 8001ada:	eb0d 0102 	add.w	r1, sp, r2
 8001ade:	4620      	mov	r0, r4
 8001ae0:	f7ff fe66 	bl	80017b0 <_read>
 8001ae4:	2803      	cmp	r0, #3
 8001ae6:	ddee      	ble.n	8001ac6 <_get_semihosting_exts+0x46>
 8001ae8:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001aec:	2b53      	cmp	r3, #83	; 0x53
 8001aee:	d1ea      	bne.n	8001ac6 <_get_semihosting_exts+0x46>
 8001af0:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8001af4:	2b48      	cmp	r3, #72	; 0x48
 8001af6:	d1e6      	bne.n	8001ac6 <_get_semihosting_exts+0x46>
 8001af8:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8001afc:	2b46      	cmp	r3, #70	; 0x46
 8001afe:	d1e2      	bne.n	8001ac6 <_get_semihosting_exts+0x46>
 8001b00:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001b04:	2b42      	cmp	r3, #66	; 0x42
 8001b06:	d1de      	bne.n	8001ac6 <_get_semihosting_exts+0x46>
 8001b08:	2201      	movs	r2, #1
 8001b0a:	4639      	mov	r1, r7
 8001b0c:	4620      	mov	r0, r4
 8001b0e:	f7ff fe6b 	bl	80017e8 <_swilseek>
 8001b12:	2800      	cmp	r0, #0
 8001b14:	dbd7      	blt.n	8001ac6 <_get_semihosting_exts+0x46>
 8001b16:	462a      	mov	r2, r5
 8001b18:	4631      	mov	r1, r6
 8001b1a:	4620      	mov	r0, r4
 8001b1c:	f7ff fe48 	bl	80017b0 <_read>
 8001b20:	4605      	mov	r5, r0
 8001b22:	4620      	mov	r0, r4
 8001b24:	f7ff fee0 	bl	80018e8 <_close>
 8001b28:	4628      	mov	r0, r5
 8001b2a:	f7ff fe13 	bl	8001754 <checkerror>
 8001b2e:	4604      	mov	r4, r0
 8001b30:	e7ce      	b.n	8001ad0 <_get_semihosting_exts+0x50>
 8001b32:	bf00      	nop
 8001b34:	08001d2b 	.word	0x08001d2b

08001b38 <initialise_semihosting_exts>:
 8001b38:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001b3a:	4d0a      	ldr	r5, [pc, #40]	; (8001b64 <initialise_semihosting_exts+0x2c>)
 8001b3c:	4c0a      	ldr	r4, [pc, #40]	; (8001b68 <initialise_semihosting_exts+0x30>)
 8001b3e:	2100      	movs	r1, #0
 8001b40:	2201      	movs	r2, #1
 8001b42:	a801      	add	r0, sp, #4
 8001b44:	6029      	str	r1, [r5, #0]
 8001b46:	6022      	str	r2, [r4, #0]
 8001b48:	f7ff ff9a 	bl	8001a80 <_get_semihosting_exts>
 8001b4c:	2800      	cmp	r0, #0
 8001b4e:	dd07      	ble.n	8001b60 <initialise_semihosting_exts+0x28>
 8001b50:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001b54:	f003 0201 	and.w	r2, r3, #1
 8001b58:	f003 0302 	and.w	r3, r3, #2
 8001b5c:	602a      	str	r2, [r5, #0]
 8001b5e:	6023      	str	r3, [r4, #0]
 8001b60:	b003      	add	sp, #12
 8001b62:	bd30      	pop	{r4, r5, pc}
 8001b64:	20000064 	.word	0x20000064
 8001b68:	20000068 	.word	0x20000068

08001b6c <_has_ext_stdout_stderr>:
 8001b6c:	b510      	push	{r4, lr}
 8001b6e:	4c04      	ldr	r4, [pc, #16]	; (8001b80 <_has_ext_stdout_stderr+0x14>)
 8001b70:	6822      	ldr	r2, [r4, #0]
 8001b72:	2a00      	cmp	r2, #0
 8001b74:	da01      	bge.n	8001b7a <_has_ext_stdout_stderr+0xe>
 8001b76:	f7ff ffdf 	bl	8001b38 <initialise_semihosting_exts>
 8001b7a:	6820      	ldr	r0, [r4, #0]
 8001b7c:	bd10      	pop	{r4, pc}
 8001b7e:	bf00      	nop
 8001b80:	20000068 	.word	0x20000068

08001b84 <initialise_monitor_handles>:
 8001b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001b88:	b085      	sub	sp, #20
 8001b8a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8001c3c <initialise_monitor_handles+0xb8>
 8001b8e:	f8cd 9004 	str.w	r9, [sp, #4]
 8001b92:	2303      	movs	r3, #3
 8001b94:	2400      	movs	r4, #0
 8001b96:	9303      	str	r3, [sp, #12]
 8001b98:	f10d 0804 	add.w	r8, sp, #4
 8001b9c:	9402      	str	r4, [sp, #8]
 8001b9e:	2501      	movs	r5, #1
 8001ba0:	4628      	mov	r0, r5
 8001ba2:	4641      	mov	r1, r8
 8001ba4:	beab      	bkpt	0x00ab
 8001ba6:	4605      	mov	r5, r0
 8001ba8:	4e20      	ldr	r6, [pc, #128]	; (8001c2c <initialise_monitor_handles+0xa8>)
 8001baa:	4a21      	ldr	r2, [pc, #132]	; (8001c30 <initialise_monitor_handles+0xac>)
 8001bac:	6035      	str	r5, [r6, #0]
 8001bae:	4623      	mov	r3, r4
 8001bb0:	f04f 31ff 	mov.w	r1, #4294967295
 8001bb4:	4614      	mov	r4, r2
 8001bb6:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 8001bba:	3301      	adds	r3, #1
 8001bbc:	2b14      	cmp	r3, #20
 8001bbe:	d1fa      	bne.n	8001bb6 <initialise_monitor_handles+0x32>
 8001bc0:	f7ff ffd4 	bl	8001b6c <_has_ext_stdout_stderr>
 8001bc4:	4d1b      	ldr	r5, [pc, #108]	; (8001c34 <initialise_monitor_handles+0xb0>)
 8001bc6:	b1d0      	cbz	r0, 8001bfe <initialise_monitor_handles+0x7a>
 8001bc8:	f04f 0a03 	mov.w	sl, #3
 8001bcc:	2304      	movs	r3, #4
 8001bce:	f8cd 9004 	str.w	r9, [sp, #4]
 8001bd2:	2701      	movs	r7, #1
 8001bd4:	f8cd a00c 	str.w	sl, [sp, #12]
 8001bd8:	9302      	str	r3, [sp, #8]
 8001bda:	4638      	mov	r0, r7
 8001bdc:	4641      	mov	r1, r8
 8001bde:	beab      	bkpt	0x00ab
 8001be0:	4683      	mov	fp, r0
 8001be2:	4b15      	ldr	r3, [pc, #84]	; (8001c38 <initialise_monitor_handles+0xb4>)
 8001be4:	f8cd 9004 	str.w	r9, [sp, #4]
 8001be8:	f8c3 b000 	str.w	fp, [r3]
 8001bec:	2308      	movs	r3, #8
 8001bee:	f8cd a00c 	str.w	sl, [sp, #12]
 8001bf2:	9302      	str	r3, [sp, #8]
 8001bf4:	4638      	mov	r0, r7
 8001bf6:	4641      	mov	r1, r8
 8001bf8:	beab      	bkpt	0x00ab
 8001bfa:	4607      	mov	r7, r0
 8001bfc:	602f      	str	r7, [r5, #0]
 8001bfe:	682b      	ldr	r3, [r5, #0]
 8001c00:	3301      	adds	r3, #1
 8001c02:	bf02      	ittt	eq
 8001c04:	4b0c      	ldreq	r3, [pc, #48]	; (8001c38 <initialise_monitor_handles+0xb4>)
 8001c06:	681b      	ldreq	r3, [r3, #0]
 8001c08:	602b      	streq	r3, [r5, #0]
 8001c0a:	6833      	ldr	r3, [r6, #0]
 8001c0c:	6023      	str	r3, [r4, #0]
 8001c0e:	2600      	movs	r6, #0
 8001c10:	6066      	str	r6, [r4, #4]
 8001c12:	f7ff ffab 	bl	8001b6c <_has_ext_stdout_stderr>
 8001c16:	b130      	cbz	r0, 8001c26 <initialise_monitor_handles+0xa2>
 8001c18:	4b07      	ldr	r3, [pc, #28]	; (8001c38 <initialise_monitor_handles+0xb4>)
 8001c1a:	681b      	ldr	r3, [r3, #0]
 8001c1c:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8001c20:	682b      	ldr	r3, [r5, #0]
 8001c22:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8001c26:	b005      	add	sp, #20
 8001c28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001c2c:	20000098 	.word	0x20000098
 8001c30:	200000a0 	.word	0x200000a0
 8001c34:	20000094 	.word	0x20000094
 8001c38:	2000009c 	.word	0x2000009c
 8001c3c:	08001d41 	.word	0x08001d41

08001c40 <_isatty>:
 8001c40:	b570      	push	{r4, r5, r6, lr}
 8001c42:	f7ff fd6d 	bl	8001720 <findslot>
 8001c46:	2509      	movs	r5, #9
 8001c48:	4604      	mov	r4, r0
 8001c4a:	b920      	cbnz	r0, 8001c56 <_isatty+0x16>
 8001c4c:	f7fe fde0 	bl	8000810 <__errno>
 8001c50:	6005      	str	r5, [r0, #0]
 8001c52:	4620      	mov	r0, r4
 8001c54:	bd70      	pop	{r4, r5, r6, pc}
 8001c56:	4628      	mov	r0, r5
 8001c58:	4621      	mov	r1, r4
 8001c5a:	beab      	bkpt	0x00ab
 8001c5c:	4604      	mov	r4, r0
 8001c5e:	2c01      	cmp	r4, #1
 8001c60:	d0f7      	beq.n	8001c52 <_isatty+0x12>
 8001c62:	f7fe fdd5 	bl	8000810 <__errno>
 8001c66:	2400      	movs	r4, #0
 8001c68:	4605      	mov	r5, r0
 8001c6a:	2613      	movs	r6, #19
 8001c6c:	4630      	mov	r0, r6
 8001c6e:	4621      	mov	r1, r4
 8001c70:	beab      	bkpt	0x00ab
 8001c72:	4606      	mov	r6, r0
 8001c74:	602e      	str	r6, [r5, #0]
 8001c76:	e7ec      	b.n	8001c52 <_isatty+0x12>

08001c78 <_init>:
 8001c78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001c7a:	bf00      	nop
 8001c7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001c7e:	bc08      	pop	{r3}
 8001c80:	469e      	mov	lr, r3
 8001c82:	4770      	bx	lr

08001c84 <_fini>:
 8001c84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001c86:	bf00      	nop
 8001c88:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001c8a:	bc08      	pop	{r3}
 8001c8c:	469e      	mov	lr, r3
 8001c8e:	4770      	bx	lr
